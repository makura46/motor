ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"motor2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.motor2_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	motor2_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	motor2_Enable, %function
  25              	motor2_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\motor2.c"
   1:Generated_Source\PSoC5/motor2.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/motor2.c **** * File Name: motor2.c
   3:Generated_Source\PSoC5/motor2.c **** * Version 3.30
   4:Generated_Source\PSoC5/motor2.c **** *
   5:Generated_Source\PSoC5/motor2.c **** * Description:
   6:Generated_Source\PSoC5/motor2.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/motor2.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/motor2.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/motor2.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/motor2.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/motor2.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/motor2.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/motor2.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/motor2.c **** *
  15:Generated_Source\PSoC5/motor2.c **** * Note:
  16:Generated_Source\PSoC5/motor2.c **** *
  17:Generated_Source\PSoC5/motor2.c **** *******************************************************************************
  18:Generated_Source\PSoC5/motor2.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/motor2.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/motor2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/motor2.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/motor2.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/motor2.c **** 
  24:Generated_Source\PSoC5/motor2.c **** #include "motor2.h"
  25:Generated_Source\PSoC5/motor2.c **** 
  26:Generated_Source\PSoC5/motor2.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/motor2.c **** #ifdef motor2_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/motor2.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/motor2.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/motor2.c **** #endif /* motor2_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 2


  31:Generated_Source\PSoC5/motor2.c **** 
  32:Generated_Source\PSoC5/motor2.c **** uint8 motor2_initVar = 0u;
  33:Generated_Source\PSoC5/motor2.c **** 
  34:Generated_Source\PSoC5/motor2.c **** 
  35:Generated_Source\PSoC5/motor2.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/motor2.c **** * Function Name: motor2_Start
  37:Generated_Source\PSoC5/motor2.c **** ********************************************************************************
  38:Generated_Source\PSoC5/motor2.c **** *
  39:Generated_Source\PSoC5/motor2.c **** * Summary:
  40:Generated_Source\PSoC5/motor2.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/motor2.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/motor2.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/motor2.c **** *
  44:Generated_Source\PSoC5/motor2.c **** * Parameters:
  45:Generated_Source\PSoC5/motor2.c **** *  None
  46:Generated_Source\PSoC5/motor2.c **** *
  47:Generated_Source\PSoC5/motor2.c **** * Return:
  48:Generated_Source\PSoC5/motor2.c **** *  None
  49:Generated_Source\PSoC5/motor2.c **** *
  50:Generated_Source\PSoC5/motor2.c **** * Global variables:
  51:Generated_Source\PSoC5/motor2.c **** *  motor2_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/motor2.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/motor2.c **** *
  54:Generated_Source\PSoC5/motor2.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/motor2.c **** void motor2_Start(void) 
  56:Generated_Source\PSoC5/motor2.c **** {
  57:Generated_Source\PSoC5/motor2.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/motor2.c ****     if(motor2_initVar == 0u)
  59:Generated_Source\PSoC5/motor2.c ****     {
  60:Generated_Source\PSoC5/motor2.c ****         motor2_Init();
  61:Generated_Source\PSoC5/motor2.c ****         motor2_initVar = 1u;
  62:Generated_Source\PSoC5/motor2.c ****     }
  63:Generated_Source\PSoC5/motor2.c ****     motor2_Enable();
  64:Generated_Source\PSoC5/motor2.c **** 
  65:Generated_Source\PSoC5/motor2.c **** }
  66:Generated_Source\PSoC5/motor2.c **** 
  67:Generated_Source\PSoC5/motor2.c **** 
  68:Generated_Source\PSoC5/motor2.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/motor2.c **** * Function Name: motor2_Init
  70:Generated_Source\PSoC5/motor2.c **** ********************************************************************************
  71:Generated_Source\PSoC5/motor2.c **** *
  72:Generated_Source\PSoC5/motor2.c **** * Summary:
  73:Generated_Source\PSoC5/motor2.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/motor2.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/motor2.c **** *  motor2_Start().
  76:Generated_Source\PSoC5/motor2.c **** *
  77:Generated_Source\PSoC5/motor2.c **** * Parameters:
  78:Generated_Source\PSoC5/motor2.c **** *  None
  79:Generated_Source\PSoC5/motor2.c **** *
  80:Generated_Source\PSoC5/motor2.c **** * Return:
  81:Generated_Source\PSoC5/motor2.c **** *  None
  82:Generated_Source\PSoC5/motor2.c **** *
  83:Generated_Source\PSoC5/motor2.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/motor2.c **** void motor2_Init(void) 
  85:Generated_Source\PSoC5/motor2.c **** {
  86:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UsingFixedFunction || motor2_UseControl)
  87:Generated_Source\PSoC5/motor2.c ****         uint8 ctrl;
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 3


  88:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UsingFixedFunction || motor2_UseControl) */
  89:Generated_Source\PSoC5/motor2.c **** 
  90:Generated_Source\PSoC5/motor2.c ****     #if(!motor2_UsingFixedFunction)
  91:Generated_Source\PSoC5/motor2.c ****         #if(motor2_UseStatus)
  92:Generated_Source\PSoC5/motor2.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/motor2.c ****             uint8 motor2_interruptState;
  94:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UseStatus) */
  95:Generated_Source\PSoC5/motor2.c ****     #endif /* (!motor2_UsingFixedFunction) */
  96:Generated_Source\PSoC5/motor2.c **** 
  97:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UsingFixedFunction)
  98:Generated_Source\PSoC5/motor2.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/motor2.c ****         motor2_CONTROL |= motor2_CFG0_MODE;
 100:Generated_Source\PSoC5/motor2.c ****         #if (motor2_DeadBand2_4)
 101:Generated_Source\PSoC5/motor2.c ****             motor2_CONTROL |= motor2_CFG0_DB;
 102:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_DeadBand2_4) */
 103:Generated_Source\PSoC5/motor2.c **** 
 104:Generated_Source\PSoC5/motor2.c ****         ctrl = motor2_CONTROL3 & ((uint8 )(~motor2_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/motor2.c ****         motor2_CONTROL3 = ctrl | motor2_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/motor2.c **** 
 107:Generated_Source\PSoC5/motor2.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/motor2.c ****         motor2_RT1 &= ((uint8)(~motor2_RT1_MASK));
 109:Generated_Source\PSoC5/motor2.c ****         motor2_RT1 |= motor2_SYNC;
 110:Generated_Source\PSoC5/motor2.c **** 
 111:Generated_Source\PSoC5/motor2.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/motor2.c ****         motor2_RT1 &= ((uint8)(~motor2_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/motor2.c ****         motor2_RT1 |= motor2_SYNCDSI_EN;
 114:Generated_Source\PSoC5/motor2.c **** 
 115:Generated_Source\PSoC5/motor2.c ****     #elif (motor2_UseControl)
 116:Generated_Source\PSoC5/motor2.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/motor2.c ****         ctrl = motor2_CONTROL & ((uint8)(~motor2_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/motor2.c ****                 ((uint8)(~motor2_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/motor2.c ****         motor2_CONTROL = ctrl | motor2_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/motor2.c ****                                    motor2_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UsingFixedFunction) */
 122:Generated_Source\PSoC5/motor2.c **** 
 123:Generated_Source\PSoC5/motor2.c ****     #if (!motor2_UsingFixedFunction)
 124:Generated_Source\PSoC5/motor2.c ****         #if (motor2_Resolution == 8)
 125:Generated_Source\PSoC5/motor2.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/motor2.c ****             motor2_AUX_CONTROLDP0 |= (motor2_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/motor2.c ****         #else /* (motor2_Resolution == 16)*/
 128:Generated_Source\PSoC5/motor2.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/motor2.c ****             motor2_AUX_CONTROLDP0 |= (motor2_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/motor2.c ****             motor2_AUX_CONTROLDP1 |= (motor2_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_Resolution == 8) */
 132:Generated_Source\PSoC5/motor2.c **** 
 133:Generated_Source\PSoC5/motor2.c ****         motor2_WriteCounter(motor2_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/motor2.c ****     #endif /* (!motor2_UsingFixedFunction) */
 135:Generated_Source\PSoC5/motor2.c **** 
 136:Generated_Source\PSoC5/motor2.c ****     motor2_WritePeriod(motor2_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/motor2.c **** 
 138:Generated_Source\PSoC5/motor2.c ****         #if (motor2_UseOneCompareMode)
 139:Generated_Source\PSoC5/motor2.c ****             motor2_WriteCompare(motor2_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/motor2.c ****         #else
 141:Generated_Source\PSoC5/motor2.c ****             motor2_WriteCompare1(motor2_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/motor2.c ****             motor2_WriteCompare2(motor2_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UseOneCompareMode) */
 144:Generated_Source\PSoC5/motor2.c **** 
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 4


 145:Generated_Source\PSoC5/motor2.c ****         #if (motor2_KillModeMinTime)
 146:Generated_Source\PSoC5/motor2.c ****             motor2_WriteKillTime(motor2_MinimumKillTime);
 147:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_KillModeMinTime) */
 148:Generated_Source\PSoC5/motor2.c **** 
 149:Generated_Source\PSoC5/motor2.c ****         #if (motor2_DeadBandUsed)
 150:Generated_Source\PSoC5/motor2.c ****             motor2_WriteDeadTime(motor2_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_DeadBandUsed) */
 152:Generated_Source\PSoC5/motor2.c **** 
 153:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UseStatus || motor2_UsingFixedFunction)
 154:Generated_Source\PSoC5/motor2.c ****         motor2_SetInterruptMode(motor2_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UseStatus || motor2_UsingFixedFunction) */
 156:Generated_Source\PSoC5/motor2.c **** 
 157:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UsingFixedFunction)
 158:Generated_Source\PSoC5/motor2.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/motor2.c ****         motor2_GLOBAL_ENABLE |= motor2_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/motor2.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/motor2.c ****         motor2_CONTROL2 |= motor2_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/motor2.c ****     #else
 163:Generated_Source\PSoC5/motor2.c ****         #if(motor2_UseStatus)
 164:Generated_Source\PSoC5/motor2.c **** 
 165:Generated_Source\PSoC5/motor2.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/motor2.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/motor2.c ****             motor2_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/motor2.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/motor2.c ****             motor2_STATUS_AUX_CTRL |= motor2_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/motor2.c **** 
 171:Generated_Source\PSoC5/motor2.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/motor2.c ****             CyExitCriticalSection(motor2_interruptState);
 173:Generated_Source\PSoC5/motor2.c **** 
 174:Generated_Source\PSoC5/motor2.c ****             /* Clear the FIFO to enable the motor2_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/motor2.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/motor2.c ****             motor2_ClearFIFO();
 177:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UseStatus) */
 178:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UsingFixedFunction) */
 179:Generated_Source\PSoC5/motor2.c **** }
 180:Generated_Source\PSoC5/motor2.c **** 
 181:Generated_Source\PSoC5/motor2.c **** 
 182:Generated_Source\PSoC5/motor2.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/motor2.c **** * Function Name: motor2_Enable
 184:Generated_Source\PSoC5/motor2.c **** ********************************************************************************
 185:Generated_Source\PSoC5/motor2.c **** *
 186:Generated_Source\PSoC5/motor2.c **** * Summary:
 187:Generated_Source\PSoC5/motor2.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/motor2.c **** *
 189:Generated_Source\PSoC5/motor2.c **** * Parameters:
 190:Generated_Source\PSoC5/motor2.c **** *  None
 191:Generated_Source\PSoC5/motor2.c **** *
 192:Generated_Source\PSoC5/motor2.c **** * Return:
 193:Generated_Source\PSoC5/motor2.c **** *  None
 194:Generated_Source\PSoC5/motor2.c **** *
 195:Generated_Source\PSoC5/motor2.c **** * Side Effects:
 196:Generated_Source\PSoC5/motor2.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/motor2.c **** *
 198:Generated_Source\PSoC5/motor2.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/motor2.c **** void motor2_Enable(void) 
 200:Generated_Source\PSoC5/motor2.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/motor2.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UsingFixedFunction)
 203:Generated_Source\PSoC5/motor2.c ****         motor2_GLOBAL_ENABLE |= motor2_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/motor2.c ****         motor2_GLOBAL_STBY_ENABLE |= motor2_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UsingFixedFunction) */
 206:Generated_Source\PSoC5/motor2.c **** 
 207:Generated_Source\PSoC5/motor2.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UseControl || motor2_UsingFixedFunction)
 209:Generated_Source\PSoC5/motor2.c ****         motor2_CONTROL |= motor2_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 79650040 		.word	1073767801
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	motor2_Enable, .-motor2_Enable
  46              		.section	.text.motor2_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	motor2_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	motor2_Stop, %function
  52              	motor2_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UseControl || motor2_UsingFixedFunction) */
 211:Generated_Source\PSoC5/motor2.c **** }
 212:Generated_Source\PSoC5/motor2.c **** 
 213:Generated_Source\PSoC5/motor2.c **** 
 214:Generated_Source\PSoC5/motor2.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/motor2.c **** * Function Name: motor2_Stop
 216:Generated_Source\PSoC5/motor2.c **** ********************************************************************************
 217:Generated_Source\PSoC5/motor2.c **** *
 218:Generated_Source\PSoC5/motor2.c **** * Summary:
 219:Generated_Source\PSoC5/motor2.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/motor2.c **** *  interrupts.
 221:Generated_Source\PSoC5/motor2.c **** *
 222:Generated_Source\PSoC5/motor2.c **** * Parameters:
 223:Generated_Source\PSoC5/motor2.c **** *  None
 224:Generated_Source\PSoC5/motor2.c **** *
 225:Generated_Source\PSoC5/motor2.c **** * Return:
 226:Generated_Source\PSoC5/motor2.c **** *  None
 227:Generated_Source\PSoC5/motor2.c **** *
 228:Generated_Source\PSoC5/motor2.c **** * Side Effects:
 229:Generated_Source\PSoC5/motor2.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/motor2.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/motor2.c **** *
 232:Generated_Source\PSoC5/motor2.c **** *******************************************************************************/
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 6


 233:Generated_Source\PSoC5/motor2.c **** void motor2_Stop(void) 
 234:Generated_Source\PSoC5/motor2.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UseControl || motor2_UsingFixedFunction)
 236:Generated_Source\PSoC5/motor2.c ****         motor2_CONTROL &= ((uint8)(~motor2_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 79650040 		.word	1073767801
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	motor2_Stop, .-motor2_Stop
  72              		.section	.text.motor2_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	motor2_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	motor2_WriteCounter, %function
  78              	motor2_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UseControl || motor2_UsingFixedFunction) */
 238:Generated_Source\PSoC5/motor2.c **** 
 239:Generated_Source\PSoC5/motor2.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UsingFixedFunction)
 241:Generated_Source\PSoC5/motor2.c ****         motor2_GLOBAL_ENABLE &= ((uint8)(~motor2_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/motor2.c ****         motor2_GLOBAL_STBY_ENABLE &= ((uint8)(~motor2_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UsingFixedFunction) */
 244:Generated_Source\PSoC5/motor2.c **** }
 245:Generated_Source\PSoC5/motor2.c **** 
 246:Generated_Source\PSoC5/motor2.c **** #if (motor2_UseOneCompareMode)
 247:Generated_Source\PSoC5/motor2.c ****     #if (motor2_CompareMode1SW)
 248:Generated_Source\PSoC5/motor2.c **** 
 249:Generated_Source\PSoC5/motor2.c **** 
 250:Generated_Source\PSoC5/motor2.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/motor2.c ****         * Function Name: motor2_SetCompareMode
 252:Generated_Source\PSoC5/motor2.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/motor2.c ****         *
 254:Generated_Source\PSoC5/motor2.c ****         * Summary:
 255:Generated_Source\PSoC5/motor2.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/motor2.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/motor2.c ****         *
 258:Generated_Source\PSoC5/motor2.c ****         * Parameters:
 259:Generated_Source\PSoC5/motor2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/motor2.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/motor2.c ****         *
 262:Generated_Source\PSoC5/motor2.c ****         * Return:
 263:Generated_Source\PSoC5/motor2.c ****         *  None
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 7


 264:Generated_Source\PSoC5/motor2.c ****         *
 265:Generated_Source\PSoC5/motor2.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/motor2.c ****         void motor2_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/motor2.c ****         {
 268:Generated_Source\PSoC5/motor2.c ****             #if(motor2_UsingFixedFunction)
 269:Generated_Source\PSoC5/motor2.c **** 
 270:Generated_Source\PSoC5/motor2.c ****                 #if(0 != motor2_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/motor2.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << motor2_CTRL_CMPMODE1_S
 272:Generated_Source\PSoC5/motor2.c ****                 #else
 273:Generated_Source\PSoC5/motor2.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/motor2.c ****                 #endif /* (0 != motor2_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/motor2.c **** 
 276:Generated_Source\PSoC5/motor2.c ****                 motor2_CONTROL3 &= ((uint8)(~motor2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/motor2.c ****                 motor2_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/motor2.c **** 
 279:Generated_Source\PSoC5/motor2.c ****             #elif (motor2_UseControl)
 280:Generated_Source\PSoC5/motor2.c **** 
 281:Generated_Source\PSoC5/motor2.c ****                 #if(0 != motor2_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/motor2.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << motor2_CTRL_CMPMODE1_
 283:Generated_Source\PSoC5/motor2.c ****                                                 motor2_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/motor2.c ****                 #else
 285:Generated_Source\PSoC5/motor2.c ****                     uint8 comparemode1masked = comparemode & motor2_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/motor2.c ****                 #endif /* (0 != motor2_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/motor2.c **** 
 288:Generated_Source\PSoC5/motor2.c ****                 #if(0 != motor2_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/motor2.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << motor2_CTRL_CMPMODE2_
 290:Generated_Source\PSoC5/motor2.c ****                                                motor2_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/motor2.c ****                 #else
 292:Generated_Source\PSoC5/motor2.c ****                     uint8 comparemode2masked = comparemode & motor2_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/motor2.c ****                 #endif /* (0 != motor2_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/motor2.c **** 
 295:Generated_Source\PSoC5/motor2.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/motor2.c ****                 motor2_CONTROL &= ((uint8)(~(motor2_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/motor2.c ****                                             motor2_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/motor2.c ****                 motor2_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/motor2.c **** 
 300:Generated_Source\PSoC5/motor2.c ****             #else
 301:Generated_Source\PSoC5/motor2.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/motor2.c ****             #endif /* (motor2_UsingFixedFunction) */
 303:Generated_Source\PSoC5/motor2.c ****         }
 304:Generated_Source\PSoC5/motor2.c ****     #endif /* motor2_CompareMode1SW */
 305:Generated_Source\PSoC5/motor2.c **** 
 306:Generated_Source\PSoC5/motor2.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/motor2.c **** 
 308:Generated_Source\PSoC5/motor2.c ****     #if (motor2_CompareMode1SW)
 309:Generated_Source\PSoC5/motor2.c **** 
 310:Generated_Source\PSoC5/motor2.c **** 
 311:Generated_Source\PSoC5/motor2.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/motor2.c ****         * Function Name: motor2_SetCompareMode1
 313:Generated_Source\PSoC5/motor2.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/motor2.c ****         *
 315:Generated_Source\PSoC5/motor2.c ****         * Summary:
 316:Generated_Source\PSoC5/motor2.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/motor2.c ****         *
 318:Generated_Source\PSoC5/motor2.c ****         * Parameters:
 319:Generated_Source\PSoC5/motor2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/motor2.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 8


 321:Generated_Source\PSoC5/motor2.c ****         *
 322:Generated_Source\PSoC5/motor2.c ****         * Return:
 323:Generated_Source\PSoC5/motor2.c ****         *  None
 324:Generated_Source\PSoC5/motor2.c ****         *
 325:Generated_Source\PSoC5/motor2.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/motor2.c ****         void motor2_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/motor2.c ****         {
 328:Generated_Source\PSoC5/motor2.c ****             #if(0 != motor2_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/motor2.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << motor2_CTRL_CMPMODE1_SHIFT
 330:Generated_Source\PSoC5/motor2.c ****                                            motor2_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/motor2.c ****             #else
 332:Generated_Source\PSoC5/motor2.c ****                 uint8 comparemodemasked = comparemode & motor2_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/motor2.c ****             #endif /* (0 != motor2_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/motor2.c **** 
 335:Generated_Source\PSoC5/motor2.c ****             #if (motor2_UseControl)
 336:Generated_Source\PSoC5/motor2.c ****                 motor2_CONTROL &= ((uint8)(~motor2_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/motor2.c ****                 motor2_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/motor2.c ****             #endif /* (motor2_UseControl) */
 339:Generated_Source\PSoC5/motor2.c ****         }
 340:Generated_Source\PSoC5/motor2.c ****     #endif /* motor2_CompareMode1SW */
 341:Generated_Source\PSoC5/motor2.c **** 
 342:Generated_Source\PSoC5/motor2.c **** #if (motor2_CompareMode2SW)
 343:Generated_Source\PSoC5/motor2.c **** 
 344:Generated_Source\PSoC5/motor2.c **** 
 345:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_SetCompareMode2
 347:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/motor2.c ****     *
 349:Generated_Source\PSoC5/motor2.c ****     * Summary:
 350:Generated_Source\PSoC5/motor2.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/motor2.c ****     *
 352:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 353:Generated_Source\PSoC5/motor2.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/motor2.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/motor2.c ****     *
 356:Generated_Source\PSoC5/motor2.c ****     * Return:
 357:Generated_Source\PSoC5/motor2.c ****     *  None
 358:Generated_Source\PSoC5/motor2.c ****     *
 359:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/motor2.c ****     void motor2_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/motor2.c ****     {
 362:Generated_Source\PSoC5/motor2.c **** 
 363:Generated_Source\PSoC5/motor2.c ****         #if(0 != motor2_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/motor2.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << motor2_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/motor2.c ****                                                  motor2_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/motor2.c ****         #else
 367:Generated_Source\PSoC5/motor2.c ****             uint8 comparemodemasked = comparemode & motor2_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/motor2.c ****         #endif /* (0 != motor2_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/motor2.c **** 
 370:Generated_Source\PSoC5/motor2.c ****         #if (motor2_UseControl)
 371:Generated_Source\PSoC5/motor2.c ****             motor2_CONTROL &= ((uint8)(~motor2_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/motor2.c ****             motor2_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UseControl) */
 374:Generated_Source\PSoC5/motor2.c ****     }
 375:Generated_Source\PSoC5/motor2.c ****     #endif /*motor2_CompareMode2SW */
 376:Generated_Source\PSoC5/motor2.c **** 
 377:Generated_Source\PSoC5/motor2.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 9


 378:Generated_Source\PSoC5/motor2.c **** 
 379:Generated_Source\PSoC5/motor2.c **** 
 380:Generated_Source\PSoC5/motor2.c **** #if (!motor2_UsingFixedFunction)
 381:Generated_Source\PSoC5/motor2.c **** 
 382:Generated_Source\PSoC5/motor2.c **** 
 383:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_WriteCounter
 385:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/motor2.c ****     *
 387:Generated_Source\PSoC5/motor2.c ****     * Summary:
 388:Generated_Source\PSoC5/motor2.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/motor2.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/motor2.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/motor2.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/motor2.c ****     *
 393:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 394:Generated_Source\PSoC5/motor2.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/motor2.c ****     *
 396:Generated_Source\PSoC5/motor2.c ****     * Return:
 397:Generated_Source\PSoC5/motor2.c ****     *  None
 398:Generated_Source\PSoC5/motor2.c ****     *
 399:Generated_Source\PSoC5/motor2.c ****     * Side Effects:
 400:Generated_Source\PSoC5/motor2.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/motor2.c ****     *
 402:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/motor2.c ****     void motor2_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/motor2.c ****                                        
 405:Generated_Source\PSoC5/motor2.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/motor2.c ****         CY_SET_REG8(motor2_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 09650040 		.word	1073767689
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	motor2_WriteCounter, .-motor2_WriteCounter
  97              		.section	.text.motor2_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	motor2_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	motor2_ReadCounter, %function
 103              	motor2_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/motor2.c ****     }
 408:Generated_Source\PSoC5/motor2.c **** 
 409:Generated_Source\PSoC5/motor2.c **** 
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 10


 410:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadCounter
 412:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/motor2.c ****     *
 414:Generated_Source\PSoC5/motor2.c ****     * Summary:
 415:Generated_Source\PSoC5/motor2.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/motor2.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/motor2.c ****     *
 418:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 419:Generated_Source\PSoC5/motor2.c ****     *  None
 420:Generated_Source\PSoC5/motor2.c ****     *
 421:Generated_Source\PSoC5/motor2.c ****     * Return:
 422:Generated_Source\PSoC5/motor2.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/motor2.c ****     *
 424:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadCounter(void) 
 426:Generated_Source\PSoC5/motor2.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/motor2.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/motor2.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/motor2.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/motor2.c ****           (void)CY_GET_REG8(motor2_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/motor2.c **** 
 432:Generated_Source\PSoC5/motor2.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/motor2.c ****         return (CY_GET_REG8(motor2_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/motor2.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 19650040 		.word	1073767705
 122 0010 59650040 		.word	1073767769
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	motor2_ReadCounter, .-motor2_ReadCounter
 126              		.section	.text.motor2_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	motor2_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	motor2_WritePeriod, %function
 132              	motor2_WritePeriod:
 133              	.LFB7:
 435:Generated_Source\PSoC5/motor2.c **** 
 436:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UseStatus)
 437:Generated_Source\PSoC5/motor2.c **** 
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 11


 438:Generated_Source\PSoC5/motor2.c **** 
 439:Generated_Source\PSoC5/motor2.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/motor2.c ****         * Function Name: motor2_ClearFIFO
 441:Generated_Source\PSoC5/motor2.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/motor2.c ****         *
 443:Generated_Source\PSoC5/motor2.c ****         * Summary:
 444:Generated_Source\PSoC5/motor2.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/motor2.c ****         *
 446:Generated_Source\PSoC5/motor2.c ****         * Parameters:
 447:Generated_Source\PSoC5/motor2.c ****         *  None
 448:Generated_Source\PSoC5/motor2.c ****         *
 449:Generated_Source\PSoC5/motor2.c ****         * Return:
 450:Generated_Source\PSoC5/motor2.c ****         *  None
 451:Generated_Source\PSoC5/motor2.c ****         *
 452:Generated_Source\PSoC5/motor2.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/motor2.c ****         void motor2_ClearFIFO(void) 
 454:Generated_Source\PSoC5/motor2.c ****         {
 455:Generated_Source\PSoC5/motor2.c ****             while(0u != (motor2_ReadStatusRegister() & motor2_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/motor2.c ****             {
 457:Generated_Source\PSoC5/motor2.c ****                 (void)motor2_ReadCapture();
 458:Generated_Source\PSoC5/motor2.c ****             }
 459:Generated_Source\PSoC5/motor2.c ****         }
 460:Generated_Source\PSoC5/motor2.c **** 
 461:Generated_Source\PSoC5/motor2.c ****     #endif /* motor2_UseStatus */
 462:Generated_Source\PSoC5/motor2.c **** 
 463:Generated_Source\PSoC5/motor2.c **** #endif /* !motor2_UsingFixedFunction */
 464:Generated_Source\PSoC5/motor2.c **** 
 465:Generated_Source\PSoC5/motor2.c **** 
 466:Generated_Source\PSoC5/motor2.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/motor2.c **** * Function Name: motor2_WritePeriod
 468:Generated_Source\PSoC5/motor2.c **** ********************************************************************************
 469:Generated_Source\PSoC5/motor2.c **** *
 470:Generated_Source\PSoC5/motor2.c **** * Summary:
 471:Generated_Source\PSoC5/motor2.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/motor2.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/motor2.c **** *
 474:Generated_Source\PSoC5/motor2.c **** * Parameters:
 475:Generated_Source\PSoC5/motor2.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/motor2.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/motor2.c **** *
 478:Generated_Source\PSoC5/motor2.c **** * Return:
 479:Generated_Source\PSoC5/motor2.c **** *  None
 480:Generated_Source\PSoC5/motor2.c **** *
 481:Generated_Source\PSoC5/motor2.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/motor2.c **** void motor2_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/motor2.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/motor2.c ****     #if(motor2_UsingFixedFunction)
 485:Generated_Source\PSoC5/motor2.c ****         CY_SET_REG16(motor2_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/motor2.c ****     #else
 487:Generated_Source\PSoC5/motor2.c ****         CY_SET_REG8(motor2_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 49650040 		.word	1073767753
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	motor2_WritePeriod, .-motor2_WritePeriod
 151              		.section	.text.motor2_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	motor2_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	motor2_WriteCompare, %function
 157              	motor2_WriteCompare:
 158              	.LFB8:
 488:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UsingFixedFunction) */
 489:Generated_Source\PSoC5/motor2.c **** }
 490:Generated_Source\PSoC5/motor2.c **** 
 491:Generated_Source\PSoC5/motor2.c **** #if (motor2_UseOneCompareMode)
 492:Generated_Source\PSoC5/motor2.c **** 
 493:Generated_Source\PSoC5/motor2.c **** 
 494:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_WriteCompare
 496:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/motor2.c ****     *
 498:Generated_Source\PSoC5/motor2.c ****     * Summary:
 499:Generated_Source\PSoC5/motor2.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/motor2.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/motor2.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/motor2.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/motor2.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/motor2.c ****     *
 505:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 506:Generated_Source\PSoC5/motor2.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/motor2.c ****     *
 508:Generated_Source\PSoC5/motor2.c ****     * Return:
 509:Generated_Source\PSoC5/motor2.c ****     *  None
 510:Generated_Source\PSoC5/motor2.c ****     *
 511:Generated_Source\PSoC5/motor2.c ****     * Side Effects:
 512:Generated_Source\PSoC5/motor2.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/motor2.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/motor2.c ****     *
 515:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/motor2.c ****     void motor2_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/motor2.c ****                                        
 518:Generated_Source\PSoC5/motor2.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:Generated_Source\PSoC5/motor2.c ****         #if(motor2_UsingFixedFunction)
 520:Generated_Source\PSoC5/motor2.c ****             CY_SET_REG16(motor2_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 13


 521:Generated_Source\PSoC5/motor2.c ****         #else
 522:Generated_Source\PSoC5/motor2.c ****             CY_SET_REG8(motor2_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 29650040 		.word	1073767721
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	motor2_WriteCompare, .-motor2_WriteCompare
 176              		.section	.text.motor2_WriteDeadTime,"ax",%progbits
 177              		.align	2
 178              		.global	motor2_WriteDeadTime
 179              		.thumb
 180              		.thumb_func
 181              		.type	motor2_WriteDeadTime, %function
 182              	motor2_WriteDeadTime:
 183              	.LFB9:
 523:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UsingFixedFunction) */
 524:Generated_Source\PSoC5/motor2.c **** 
 525:Generated_Source\PSoC5/motor2.c ****         #if (motor2_PWMMode == motor2__B_PWM__DITHER)
 526:Generated_Source\PSoC5/motor2.c ****             #if(motor2_UsingFixedFunction)
 527:Generated_Source\PSoC5/motor2.c ****                 CY_SET_REG16(motor2_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/motor2.c ****             #else
 529:Generated_Source\PSoC5/motor2.c ****                 CY_SET_REG8(motor2_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/motor2.c ****             #endif /* (motor2_UsingFixedFunction) */
 531:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_PWMMode == motor2__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/motor2.c ****     }
 533:Generated_Source\PSoC5/motor2.c **** 
 534:Generated_Source\PSoC5/motor2.c **** 
 535:Generated_Source\PSoC5/motor2.c **** #else
 536:Generated_Source\PSoC5/motor2.c **** 
 537:Generated_Source\PSoC5/motor2.c **** 
 538:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_WriteCompare1
 540:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/motor2.c ****     *
 542:Generated_Source\PSoC5/motor2.c ****     * Summary:
 543:Generated_Source\PSoC5/motor2.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/motor2.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/motor2.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/motor2.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/motor2.c ****     *
 548:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 549:Generated_Source\PSoC5/motor2.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/motor2.c ****     *
 551:Generated_Source\PSoC5/motor2.c ****     * Return:
 552:Generated_Source\PSoC5/motor2.c ****     *  None
 553:Generated_Source\PSoC5/motor2.c ****     *
 554:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/motor2.c ****     void motor2_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/motor2.c ****                                         
 557:Generated_Source\PSoC5/motor2.c ****     {
 558:Generated_Source\PSoC5/motor2.c ****         #if(motor2_UsingFixedFunction)
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 14


 559:Generated_Source\PSoC5/motor2.c ****             CY_SET_REG16(motor2_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/motor2.c ****         #else
 561:Generated_Source\PSoC5/motor2.c ****             CY_SET_REG8(motor2_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UsingFixedFunction) */
 563:Generated_Source\PSoC5/motor2.c ****     }
 564:Generated_Source\PSoC5/motor2.c **** 
 565:Generated_Source\PSoC5/motor2.c **** 
 566:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_WriteCompare2
 568:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/motor2.c ****     *
 570:Generated_Source\PSoC5/motor2.c ****     * Summary:
 571:Generated_Source\PSoC5/motor2.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/motor2.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/motor2.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/motor2.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/motor2.c ****     *  mode.
 576:Generated_Source\PSoC5/motor2.c ****     *
 577:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 578:Generated_Source\PSoC5/motor2.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/motor2.c ****     *
 580:Generated_Source\PSoC5/motor2.c ****     * Return:
 581:Generated_Source\PSoC5/motor2.c ****     *  None
 582:Generated_Source\PSoC5/motor2.c ****     *
 583:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/motor2.c ****     void motor2_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/motor2.c ****                                         
 586:Generated_Source\PSoC5/motor2.c ****     {
 587:Generated_Source\PSoC5/motor2.c ****         #if(motor2_UsingFixedFunction)
 588:Generated_Source\PSoC5/motor2.c ****             CY_SET_REG16(motor2_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/motor2.c ****         #else
 590:Generated_Source\PSoC5/motor2.c ****             CY_SET_REG8(motor2_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UsingFixedFunction) */
 592:Generated_Source\PSoC5/motor2.c ****     }
 593:Generated_Source\PSoC5/motor2.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/motor2.c **** 
 595:Generated_Source\PSoC5/motor2.c **** #if (motor2_DeadBandUsed)
 596:Generated_Source\PSoC5/motor2.c **** 
 597:Generated_Source\PSoC5/motor2.c **** 
 598:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_WriteDeadTime
 600:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/motor2.c ****     *
 602:Generated_Source\PSoC5/motor2.c ****     * Summary:
 603:Generated_Source\PSoC5/motor2.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/motor2.c ****     *
 605:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 606:Generated_Source\PSoC5/motor2.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/motor2.c ****     *
 608:Generated_Source\PSoC5/motor2.c ****     * Return:
 609:Generated_Source\PSoC5/motor2.c ****     *  None
 610:Generated_Source\PSoC5/motor2.c ****     *
 611:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/motor2.c ****     void motor2_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/motor2.c ****     {
 184              		.loc 1 613 0
 185              		.cfi_startproc
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 15


 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 614:Generated_Source\PSoC5/motor2.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/motor2.c ****         #if(!motor2_DeadBand2_4)
 616:Generated_Source\PSoC5/motor2.c ****             CY_SET_REG8(motor2_DEADBAND_COUNT_PTR, deadtime);
 190              		.loc 1 616 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 28650040 		.word	1073767720
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	motor2_WriteDeadTime, .-motor2_WriteDeadTime
 201              		.section	.text.motor2_ReadDeadTime,"ax",%progbits
 202              		.align	2
 203              		.global	motor2_ReadDeadTime
 204              		.thumb
 205              		.thumb_func
 206              		.type	motor2_ReadDeadTime, %function
 207              	motor2_ReadDeadTime:
 208              	.LFB10:
 617:Generated_Source\PSoC5/motor2.c ****         #else
 618:Generated_Source\PSoC5/motor2.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/motor2.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/motor2.c ****             motor2_DEADBAND_COUNT &= ((uint8)(~motor2_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/motor2.c **** 
 622:Generated_Source\PSoC5/motor2.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/motor2.c ****             #if(motor2_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/motor2.c ****                 motor2_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << motor2_DEADBAND_COUNT_SHIFT)) 
 625:Generated_Source\PSoC5/motor2.c ****                                                     motor2_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/motor2.c ****             #else
 627:Generated_Source\PSoC5/motor2.c ****                 motor2_DEADBAND_COUNT |= deadtime & motor2_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/motor2.c ****             #endif /* (motor2_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/motor2.c **** 
 630:Generated_Source\PSoC5/motor2.c ****         #endif /* (!motor2_DeadBand2_4) */
 631:Generated_Source\PSoC5/motor2.c ****     }
 632:Generated_Source\PSoC5/motor2.c **** 
 633:Generated_Source\PSoC5/motor2.c **** 
 634:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadDeadTime
 636:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/motor2.c ****     *
 638:Generated_Source\PSoC5/motor2.c ****     * Summary:
 639:Generated_Source\PSoC5/motor2.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/motor2.c ****     *
 641:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 642:Generated_Source\PSoC5/motor2.c ****     *  None
 643:Generated_Source\PSoC5/motor2.c ****     *
 644:Generated_Source\PSoC5/motor2.c ****     * Return:
 645:Generated_Source\PSoC5/motor2.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/motor2.c ****     *
 647:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 16


 648:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/motor2.c ****     {
 209              		.loc 1 649 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 650:Generated_Source\PSoC5/motor2.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/motor2.c ****         #if(!motor2_DeadBand2_4)
 652:Generated_Source\PSoC5/motor2.c ****             return (CY_GET_REG8(motor2_DEADBAND_COUNT_PTR));
 214              		.loc 1 652 0
 215 0000 014B     		ldr	r3, .L23
 216 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 653:Generated_Source\PSoC5/motor2.c ****         #else
 654:Generated_Source\PSoC5/motor2.c **** 
 655:Generated_Source\PSoC5/motor2.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/motor2.c ****             #if(motor2_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/motor2.c ****                 return ((uint8)(((uint8)(motor2_DEADBAND_COUNT & motor2_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/motor2.c ****                                                                            motor2_DEADBAND_COUNT_SH
 659:Generated_Source\PSoC5/motor2.c ****             #else
 660:Generated_Source\PSoC5/motor2.c ****                 return (motor2_DEADBAND_COUNT & motor2_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/motor2.c ****             #endif /* (motor2_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/motor2.c ****         #endif /* (!motor2_DeadBand2_4) */
 663:Generated_Source\PSoC5/motor2.c ****     }
 217              		.loc 1 663 0
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 28650040 		.word	1073767720
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	motor2_ReadDeadTime, .-motor2_ReadDeadTime
 226              		.section	.text.motor2_SetInterruptMode,"ax",%progbits
 227              		.align	2
 228              		.global	motor2_SetInterruptMode
 229              		.thumb
 230              		.thumb_func
 231              		.type	motor2_SetInterruptMode, %function
 232              	motor2_SetInterruptMode:
 233              	.LFB11:
 664:Generated_Source\PSoC5/motor2.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/motor2.c **** 
 666:Generated_Source\PSoC5/motor2.c **** #if (motor2_UseStatus || motor2_UsingFixedFunction)
 667:Generated_Source\PSoC5/motor2.c **** 
 668:Generated_Source\PSoC5/motor2.c **** 
 669:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_SetInterruptMode
 671:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/motor2.c ****     *
 673:Generated_Source\PSoC5/motor2.c ****     * Summary:
 674:Generated_Source\PSoC5/motor2.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/motor2.c ****     *  source status register.
 676:Generated_Source\PSoC5/motor2.c ****     *
 677:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 678:Generated_Source\PSoC5/motor2.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/motor2.c ****     *
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 17


 680:Generated_Source\PSoC5/motor2.c ****     * Return:
 681:Generated_Source\PSoC5/motor2.c ****     *  None
 682:Generated_Source\PSoC5/motor2.c ****     *
 683:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/motor2.c ****     void motor2_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/motor2.c ****     {
 234              		.loc 1 685 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL4:
 686:Generated_Source\PSoC5/motor2.c ****         CY_SET_REG8(motor2_STATUS_MASK_PTR, interruptMode);
 240              		.loc 1 686 0
 241 0000 014B     		ldr	r3, .L26
 242 0002 1870     		strb	r0, [r3]
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 89650040 		.word	1073767817
 248              		.cfi_endproc
 249              	.LFE11:
 250              		.size	motor2_SetInterruptMode, .-motor2_SetInterruptMode
 251              		.section	.text.motor2_ReadStatusRegister,"ax",%progbits
 252              		.align	2
 253              		.global	motor2_ReadStatusRegister
 254              		.thumb
 255              		.thumb_func
 256              		.type	motor2_ReadStatusRegister, %function
 257              	motor2_ReadStatusRegister:
 258              	.LFB12:
 687:Generated_Source\PSoC5/motor2.c ****     }
 688:Generated_Source\PSoC5/motor2.c **** 
 689:Generated_Source\PSoC5/motor2.c **** 
 690:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadStatusRegister
 692:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/motor2.c ****     *
 694:Generated_Source\PSoC5/motor2.c ****     * Summary:
 695:Generated_Source\PSoC5/motor2.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/motor2.c ****     *
 697:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 698:Generated_Source\PSoC5/motor2.c ****     *  None
 699:Generated_Source\PSoC5/motor2.c ****     *
 700:Generated_Source\PSoC5/motor2.c ****     * Return:
 701:Generated_Source\PSoC5/motor2.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/motor2.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/motor2.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/motor2.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/motor2.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/motor2.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/motor2.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/motor2.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/motor2.c ****     *
 710:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadStatusRegister(void) 
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 18


 712:Generated_Source\PSoC5/motor2.c ****     {
 259              		.loc 1 712 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 713:Generated_Source\PSoC5/motor2.c ****         return (CY_GET_REG8(motor2_STATUS_PTR));
 264              		.loc 1 713 0
 265 0000 014B     		ldr	r3, .L29
 266 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/motor2.c ****     }
 267              		.loc 1 714 0
 268 0004 7047     		bx	lr
 269              	.L30:
 270 0006 00BF     		.align	2
 271              	.L29:
 272 0008 69650040 		.word	1073767785
 273              		.cfi_endproc
 274              	.LFE12:
 275              		.size	motor2_ReadStatusRegister, .-motor2_ReadStatusRegister
 276              		.section	.text.motor2_ReadControlRegister,"ax",%progbits
 277              		.align	2
 278              		.global	motor2_ReadControlRegister
 279              		.thumb
 280              		.thumb_func
 281              		.type	motor2_ReadControlRegister, %function
 282              	motor2_ReadControlRegister:
 283              	.LFB13:
 715:Generated_Source\PSoC5/motor2.c **** 
 716:Generated_Source\PSoC5/motor2.c **** #endif /* (motor2_UseStatus || motor2_UsingFixedFunction) */
 717:Generated_Source\PSoC5/motor2.c **** 
 718:Generated_Source\PSoC5/motor2.c **** 
 719:Generated_Source\PSoC5/motor2.c **** #if (motor2_UseControl)
 720:Generated_Source\PSoC5/motor2.c **** 
 721:Generated_Source\PSoC5/motor2.c **** 
 722:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadControlRegister
 724:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/motor2.c ****     *
 726:Generated_Source\PSoC5/motor2.c ****     * Summary:
 727:Generated_Source\PSoC5/motor2.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/motor2.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/motor2.c ****     *
 730:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 731:Generated_Source\PSoC5/motor2.c ****     *  None
 732:Generated_Source\PSoC5/motor2.c ****     *
 733:Generated_Source\PSoC5/motor2.c ****     * Return:
 734:Generated_Source\PSoC5/motor2.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/motor2.c ****     *
 736:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/motor2.c ****     {
 284              		.loc 1 738 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 19


 739:Generated_Source\PSoC5/motor2.c ****         uint8 result;
 740:Generated_Source\PSoC5/motor2.c **** 
 741:Generated_Source\PSoC5/motor2.c ****         result = CY_GET_REG8(motor2_CONTROL_PTR);
 289              		.loc 1 741 0
 290 0000 014B     		ldr	r3, .L32
 291 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 292              	.LVL5:
 742:Generated_Source\PSoC5/motor2.c ****         return (result);
 743:Generated_Source\PSoC5/motor2.c ****     }
 293              		.loc 1 743 0
 294 0004 7047     		bx	lr
 295              	.L33:
 296 0006 00BF     		.align	2
 297              	.L32:
 298 0008 79650040 		.word	1073767801
 299              		.cfi_endproc
 300              	.LFE13:
 301              		.size	motor2_ReadControlRegister, .-motor2_ReadControlRegister
 302              		.section	.text.motor2_WriteControlRegister,"ax",%progbits
 303              		.align	2
 304              		.global	motor2_WriteControlRegister
 305              		.thumb
 306              		.thumb_func
 307              		.type	motor2_WriteControlRegister, %function
 308              	motor2_WriteControlRegister:
 309              	.LFB14:
 744:Generated_Source\PSoC5/motor2.c **** 
 745:Generated_Source\PSoC5/motor2.c **** 
 746:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_WriteControlRegister
 748:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/motor2.c ****     *
 750:Generated_Source\PSoC5/motor2.c ****     * Summary:
 751:Generated_Source\PSoC5/motor2.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/motor2.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/motor2.c ****     *
 754:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 755:Generated_Source\PSoC5/motor2.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/motor2.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/motor2.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/motor2.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/motor2.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/motor2.c ****     *
 761:Generated_Source\PSoC5/motor2.c ****     * Return:
 762:Generated_Source\PSoC5/motor2.c ****     *  None
 763:Generated_Source\PSoC5/motor2.c ****     *
 764:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/motor2.c ****     void motor2_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/motor2.c ****     {
 310              		.loc 1 766 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL6:
 767:Generated_Source\PSoC5/motor2.c ****         CY_SET_REG8(motor2_CONTROL_PTR, control);
 316              		.loc 1 767 0
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 20


 317 0000 014B     		ldr	r3, .L35
 318 0002 1870     		strb	r0, [r3]
 319 0004 7047     		bx	lr
 320              	.L36:
 321 0006 00BF     		.align	2
 322              	.L35:
 323 0008 79650040 		.word	1073767801
 324              		.cfi_endproc
 325              	.LFE14:
 326              		.size	motor2_WriteControlRegister, .-motor2_WriteControlRegister
 327              		.section	.text.motor2_ReadCapture,"ax",%progbits
 328              		.align	2
 329              		.global	motor2_ReadCapture
 330              		.thumb
 331              		.thumb_func
 332              		.type	motor2_ReadCapture, %function
 333              	motor2_ReadCapture:
 334              	.LFB15:
 768:Generated_Source\PSoC5/motor2.c ****     }
 769:Generated_Source\PSoC5/motor2.c **** 
 770:Generated_Source\PSoC5/motor2.c **** #endif /* (motor2_UseControl) */
 771:Generated_Source\PSoC5/motor2.c **** 
 772:Generated_Source\PSoC5/motor2.c **** 
 773:Generated_Source\PSoC5/motor2.c **** #if (!motor2_UsingFixedFunction)
 774:Generated_Source\PSoC5/motor2.c **** 
 775:Generated_Source\PSoC5/motor2.c **** 
 776:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadCapture
 778:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/motor2.c ****     *
 780:Generated_Source\PSoC5/motor2.c ****     * Summary:
 781:Generated_Source\PSoC5/motor2.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/motor2.c ****     *
 783:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 784:Generated_Source\PSoC5/motor2.c ****     *  None
 785:Generated_Source\PSoC5/motor2.c ****     *
 786:Generated_Source\PSoC5/motor2.c ****     * Return:
 787:Generated_Source\PSoC5/motor2.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/motor2.c ****     *
 789:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadCapture(void) 
 791:Generated_Source\PSoC5/motor2.c ****     {
 335              		.loc 1 791 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 792:Generated_Source\PSoC5/motor2.c ****         return (CY_GET_REG8(motor2_CAPTURE_LSB_PTR));
 340              		.loc 1 792 0
 341 0000 014B     		ldr	r3, .L38
 342 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/motor2.c ****     }
 343              		.loc 1 793 0
 344 0004 7047     		bx	lr
 345              	.L39:
 346 0006 00BF     		.align	2
 347              	.L38:
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 21


 348 0008 59650040 		.word	1073767769
 349              		.cfi_endproc
 350              	.LFE15:
 351              		.size	motor2_ReadCapture, .-motor2_ReadCapture
 352              		.section	.text.motor2_ClearFIFO,"ax",%progbits
 353              		.align	2
 354              		.global	motor2_ClearFIFO
 355              		.thumb
 356              		.thumb_func
 357              		.type	motor2_ClearFIFO, %function
 358              	motor2_ClearFIFO:
 359              	.LFB6:
 454:Generated_Source\PSoC5/motor2.c ****             while(0u != (motor2_ReadStatusRegister() & motor2_STATUS_FIFONEMPTY))
 360              		.loc 1 454 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 08B5     		push	{r3, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/motor2.c ****             {
 368              		.loc 1 455 0
 369 0002 01E0     		b	.L41
 370              	.L42:
 457:Generated_Source\PSoC5/motor2.c ****             }
 371              		.loc 1 457 0
 372 0004 FFF7FEFF 		bl	motor2_ReadCapture
 373              	.LVL7:
 374              	.L41:
 455:Generated_Source\PSoC5/motor2.c ****             {
 375              		.loc 1 455 0
 376 0008 FFF7FEFF 		bl	motor2_ReadStatusRegister
 377              	.LVL8:
 378 000c 10F0100F 		tst	r0, #16
 379 0010 F8D1     		bne	.L42
 459:Generated_Source\PSoC5/motor2.c **** 
 380              		.loc 1 459 0
 381 0012 08BD     		pop	{r3, pc}
 382              		.cfi_endproc
 383              	.LFE6:
 384              		.size	motor2_ClearFIFO, .-motor2_ClearFIFO
 385              		.section	.text.motor2_Init,"ax",%progbits
 386              		.align	2
 387              		.global	motor2_Init
 388              		.thumb
 389              		.thumb_func
 390              		.type	motor2_Init, %function
 391              	motor2_Init:
 392              	.LFB1:
  85:Generated_Source\PSoC5/motor2.c ****     #if (motor2_UsingFixedFunction || motor2_UseControl)
 393              		.loc 1 85 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 22


 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/motor2.c ****                 ((uint8)(~motor2_CTRL_CMPMODE1_MASK));
 401              		.loc 1 117 0
 402 0002 134A     		ldr	r2, .L46
 403 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 404 0006 03F0C003 		and	r3, r3, #192
 405              	.LVL9:
 119:Generated_Source\PSoC5/motor2.c ****                                    motor2_DEFAULT_COMPARE1_MODE;
 406              		.loc 1 119 0
 407 000a 43F00903 		orr	r3, r3, #9
 408              	.LVL10:
 409 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/motor2.c ****         #else /* (motor2_Resolution == 16)*/
 410              		.loc 1 126 0
 411 0010 104C     		ldr	r4, .L46+4
 412 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 413 0014 43F00103 		orr	r3, r3, #1
 414 0018 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC5/motor2.c ****     #endif /* (!motor2_UsingFixedFunction) */
 415              		.loc 1 133 0
 416 001a FF20     		movs	r0, #255
 417 001c FFF7FEFF 		bl	motor2_WriteCounter
 418              	.LVL11:
 136:Generated_Source\PSoC5/motor2.c **** 
 419              		.loc 1 136 0
 420 0020 FF20     		movs	r0, #255
 421 0022 FFF7FEFF 		bl	motor2_WritePeriod
 422              	.LVL12:
 139:Generated_Source\PSoC5/motor2.c ****         #else
 423              		.loc 1 139 0
 424 0026 3220     		movs	r0, #50
 425 0028 FFF7FEFF 		bl	motor2_WriteCompare
 426              	.LVL13:
 150:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_DeadBandUsed) */
 427              		.loc 1 150 0
 428 002c 0420     		movs	r0, #4
 429 002e FFF7FEFF 		bl	motor2_WriteDeadTime
 430              	.LVL14:
 154:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UseStatus || motor2_UsingFixedFunction) */
 431              		.loc 1 154 0
 432 0032 0020     		movs	r0, #0
 433 0034 FFF7FEFF 		bl	motor2_SetInterruptMode
 434              	.LVL15:
 167:Generated_Source\PSoC5/motor2.c ****             /* Use the interrupt output of the status register for IRQ output */
 435              		.loc 1 167 0
 436 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 437              	.LVL16:
 169:Generated_Source\PSoC5/motor2.c **** 
 438              		.loc 1 169 0
 439 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 440 003e 43F01003 		orr	r3, r3, #16
 441 0042 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/motor2.c **** 
 442              		.loc 1 172 0
 443 0044 FFF7FEFF 		bl	CyExitCriticalSection
 444              	.LVL17:
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 23


 176:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UseStatus) */
 445              		.loc 1 176 0
 446 0048 FFF7FEFF 		bl	motor2_ClearFIFO
 447              	.LVL18:
 448 004c 10BD     		pop	{r4, pc}
 449              	.L47:
 450 004e 00BF     		.align	2
 451              	.L46:
 452 0050 79650040 		.word	1073767801
 453 0054 99650040 		.word	1073767833
 454              		.cfi_endproc
 455              	.LFE1:
 456              		.size	motor2_Init, .-motor2_Init
 457              		.section	.text.motor2_Start,"ax",%progbits
 458              		.align	2
 459              		.global	motor2_Start
 460              		.thumb
 461              		.thumb_func
 462              		.type	motor2_Start, %function
 463              	motor2_Start:
 464              	.LFB0:
  56:Generated_Source\PSoC5/motor2.c ****     /* If not Initialized then initialize all required hardware and software */
 465              		.loc 1 56 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 08B5     		push	{r3, lr}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
 472              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/motor2.c ****     {
 473              		.loc 1 58 0
 474 0002 054B     		ldr	r3, .L51
 475 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 476 0006 23B9     		cbnz	r3, .L49
  60:Generated_Source\PSoC5/motor2.c ****         motor2_initVar = 1u;
 477              		.loc 1 60 0
 478 0008 FFF7FEFF 		bl	motor2_Init
 479              	.LVL19:
  61:Generated_Source\PSoC5/motor2.c ****     }
 480              		.loc 1 61 0
 481 000c 0122     		movs	r2, #1
 482 000e 024B     		ldr	r3, .L51
 483 0010 1A70     		strb	r2, [r3]
 484              	.L49:
  63:Generated_Source\PSoC5/motor2.c **** 
 485              		.loc 1 63 0
 486 0012 FFF7FEFF 		bl	motor2_Enable
 487              	.LVL20:
 488 0016 08BD     		pop	{r3, pc}
 489              	.L52:
 490              		.align	2
 491              	.L51:
 492 0018 00000000 		.word	.LANCHOR0
 493              		.cfi_endproc
 494              	.LFE0:
 495              		.size	motor2_Start, .-motor2_Start
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 24


 496              		.section	.text.motor2_ReadCompare,"ax",%progbits
 497              		.align	2
 498              		.global	motor2_ReadCompare
 499              		.thumb
 500              		.thumb_func
 501              		.type	motor2_ReadCompare, %function
 502              	motor2_ReadCompare:
 503              	.LFB16:
 794:Generated_Source\PSoC5/motor2.c **** 
 795:Generated_Source\PSoC5/motor2.c **** #endif /* (!motor2_UsingFixedFunction) */
 796:Generated_Source\PSoC5/motor2.c **** 
 797:Generated_Source\PSoC5/motor2.c **** 
 798:Generated_Source\PSoC5/motor2.c **** #if (motor2_UseOneCompareMode)
 799:Generated_Source\PSoC5/motor2.c **** 
 800:Generated_Source\PSoC5/motor2.c **** 
 801:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadCompare
 803:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/motor2.c ****     *
 805:Generated_Source\PSoC5/motor2.c ****     * Summary:
 806:Generated_Source\PSoC5/motor2.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/motor2.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/motor2.c ****     *
 809:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 810:Generated_Source\PSoC5/motor2.c ****     *  None
 811:Generated_Source\PSoC5/motor2.c ****     *
 812:Generated_Source\PSoC5/motor2.c ****     * Return:
 813:Generated_Source\PSoC5/motor2.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/motor2.c ****     *
 815:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadCompare(void) 
 817:Generated_Source\PSoC5/motor2.c ****     {
 504              		.loc 1 817 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 818:Generated_Source\PSoC5/motor2.c ****         #if(motor2_UsingFixedFunction)
 819:Generated_Source\PSoC5/motor2.c ****             return ((uint8)CY_GET_REG16(motor2_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/motor2.c ****         #else
 821:Generated_Source\PSoC5/motor2.c ****             return (CY_GET_REG8(motor2_COMPARE1_LSB_PTR));
 509              		.loc 1 821 0
 510 0000 014B     		ldr	r3, .L54
 511 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:Generated_Source\PSoC5/motor2.c ****         #endif /* (motor2_UsingFixedFunction) */
 823:Generated_Source\PSoC5/motor2.c ****     }
 512              		.loc 1 823 0
 513 0004 7047     		bx	lr
 514              	.L55:
 515 0006 00BF     		.align	2
 516              	.L54:
 517 0008 29650040 		.word	1073767721
 518              		.cfi_endproc
 519              	.LFE16:
 520              		.size	motor2_ReadCompare, .-motor2_ReadCompare
 521              		.section	.text.motor2_ReadPeriod,"ax",%progbits
 522              		.align	2
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 25


 523              		.global	motor2_ReadPeriod
 524              		.thumb
 525              		.thumb_func
 526              		.type	motor2_ReadPeriod, %function
 527              	motor2_ReadPeriod:
 528              	.LFB17:
 824:Generated_Source\PSoC5/motor2.c **** 
 825:Generated_Source\PSoC5/motor2.c **** #else
 826:Generated_Source\PSoC5/motor2.c **** 
 827:Generated_Source\PSoC5/motor2.c **** 
 828:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadCompare1
 830:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/motor2.c ****     *
 832:Generated_Source\PSoC5/motor2.c ****     * Summary:
 833:Generated_Source\PSoC5/motor2.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/motor2.c ****     *
 835:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 836:Generated_Source\PSoC5/motor2.c ****     *  None
 837:Generated_Source\PSoC5/motor2.c ****     *
 838:Generated_Source\PSoC5/motor2.c ****     * Return:
 839:Generated_Source\PSoC5/motor2.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/motor2.c ****     *
 841:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadCompare1(void) 
 843:Generated_Source\PSoC5/motor2.c ****     {
 844:Generated_Source\PSoC5/motor2.c ****         return (CY_GET_REG8(motor2_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/motor2.c ****     }
 846:Generated_Source\PSoC5/motor2.c **** 
 847:Generated_Source\PSoC5/motor2.c **** 
 848:Generated_Source\PSoC5/motor2.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/motor2.c ****     * Function Name: motor2_ReadCompare2
 850:Generated_Source\PSoC5/motor2.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/motor2.c ****     *
 852:Generated_Source\PSoC5/motor2.c ****     * Summary:
 853:Generated_Source\PSoC5/motor2.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/motor2.c ****     *
 855:Generated_Source\PSoC5/motor2.c ****     * Parameters:
 856:Generated_Source\PSoC5/motor2.c ****     *  None
 857:Generated_Source\PSoC5/motor2.c ****     *
 858:Generated_Source\PSoC5/motor2.c ****     * Return:
 859:Generated_Source\PSoC5/motor2.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/motor2.c ****     *
 861:Generated_Source\PSoC5/motor2.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/motor2.c ****     uint8 motor2_ReadCompare2(void) 
 863:Generated_Source\PSoC5/motor2.c ****     {
 864:Generated_Source\PSoC5/motor2.c ****         return (CY_GET_REG8(motor2_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/motor2.c ****     }
 866:Generated_Source\PSoC5/motor2.c **** 
 867:Generated_Source\PSoC5/motor2.c **** #endif /* (motor2_UseOneCompareMode) */
 868:Generated_Source\PSoC5/motor2.c **** 
 869:Generated_Source\PSoC5/motor2.c **** 
 870:Generated_Source\PSoC5/motor2.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/motor2.c **** * Function Name: motor2_ReadPeriod
 872:Generated_Source\PSoC5/motor2.c **** ********************************************************************************
 873:Generated_Source\PSoC5/motor2.c **** *
 874:Generated_Source\PSoC5/motor2.c **** * Summary:
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 26


 875:Generated_Source\PSoC5/motor2.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/motor2.c **** *
 877:Generated_Source\PSoC5/motor2.c **** * Parameters:
 878:Generated_Source\PSoC5/motor2.c **** *  None
 879:Generated_Source\PSoC5/motor2.c **** *
 880:Generated_Source\PSoC5/motor2.c **** * Return:
 881:Generated_Source\PSoC5/motor2.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/motor2.c **** *
 883:Generated_Source\PSoC5/motor2.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/motor2.c **** uint8 motor2_ReadPeriod(void) 
 885:Generated_Source\PSoC5/motor2.c **** {
 529              		.loc 1 885 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 886:Generated_Source\PSoC5/motor2.c ****     #if(motor2_UsingFixedFunction)
 887:Generated_Source\PSoC5/motor2.c ****         return ((uint8)CY_GET_REG16(motor2_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/motor2.c ****     #else
 889:Generated_Source\PSoC5/motor2.c ****         return (CY_GET_REG8(motor2_PERIOD_LSB_PTR));
 534              		.loc 1 889 0
 535 0000 014B     		ldr	r3, .L57
 536 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/motor2.c ****     #endif /* (motor2_UsingFixedFunction) */
 891:Generated_Source\PSoC5/motor2.c **** }
 537              		.loc 1 891 0
 538 0004 7047     		bx	lr
 539              	.L58:
 540 0006 00BF     		.align	2
 541              	.L57:
 542 0008 49650040 		.word	1073767753
 543              		.cfi_endproc
 544              	.LFE17:
 545              		.size	motor2_ReadPeriod, .-motor2_ReadPeriod
 546              		.global	motor2_initVar
 547              		.bss
 548              		.set	.LANCHOR0,. + 0
 549              		.type	motor2_initVar, %object
 550              		.size	motor2_initVar, 1
 551              	motor2_initVar:
 552 0000 00       		.space	1
 553              		.text
 554              	.Letext0:
 555              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 556              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 557              		.section	.debug_info,"",%progbits
 558              	.Ldebug_info0:
 559 0000 7E030000 		.4byte	0x37e
 560 0004 0400     		.2byte	0x4
 561 0006 00000000 		.4byte	.Ldebug_abbrev0
 562 000a 04       		.byte	0x4
 563 000b 01       		.uleb128 0x1
 564 000c B6000000 		.4byte	.LASF44
 565 0010 0C       		.byte	0xc
 566 0011 20020000 		.4byte	.LASF45
 567 0015 70010000 		.4byte	.LASF46
 568 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 27


 569 001d 00000000 		.4byte	0
 570 0021 00000000 		.4byte	.Ldebug_line0
 571 0025 02       		.uleb128 0x2
 572 0026 01       		.byte	0x1
 573 0027 06       		.byte	0x6
 574 0028 3C030000 		.4byte	.LASF0
 575 002c 02       		.uleb128 0x2
 576 002d 01       		.byte	0x1
 577 002e 08       		.byte	0x8
 578 002f A8000000 		.4byte	.LASF1
 579 0033 02       		.uleb128 0x2
 580 0034 02       		.byte	0x2
 581 0035 05       		.byte	0x5
 582 0036 D7020000 		.4byte	.LASF2
 583 003a 02       		.uleb128 0x2
 584 003b 02       		.byte	0x2
 585 003c 07       		.byte	0x7
 586 003d 3A000000 		.4byte	.LASF3
 587 0041 02       		.uleb128 0x2
 588 0042 04       		.byte	0x4
 589 0043 05       		.byte	0x5
 590 0044 31000000 		.4byte	.LASF4
 591 0048 02       		.uleb128 0x2
 592 0049 04       		.byte	0x4
 593 004a 07       		.byte	0x7
 594 004b 49010000 		.4byte	.LASF5
 595 004f 02       		.uleb128 0x2
 596 0050 08       		.byte	0x8
 597 0051 05       		.byte	0x5
 598 0052 9A020000 		.4byte	.LASF6
 599 0056 02       		.uleb128 0x2
 600 0057 08       		.byte	0x8
 601 0058 07       		.byte	0x7
 602 0059 71030000 		.4byte	.LASF7
 603 005d 03       		.uleb128 0x3
 604 005e 04       		.byte	0x4
 605 005f 05       		.byte	0x5
 606 0060 696E7400 		.ascii	"int\000"
 607 0064 02       		.uleb128 0x2
 608 0065 04       		.byte	0x4
 609 0066 07       		.byte	0x7
 610 0067 BB010000 		.4byte	.LASF8
 611 006b 04       		.uleb128 0x4
 612 006c 5B010000 		.4byte	.LASF12
 613 0070 02       		.byte	0x2
 614 0071 9201     		.2byte	0x192
 615 0073 2C000000 		.4byte	0x2c
 616 0077 02       		.uleb128 0x2
 617 0078 04       		.byte	0x4
 618 0079 04       		.byte	0x4
 619 007a 7B000000 		.4byte	.LASF9
 620 007e 02       		.uleb128 0x2
 621 007f 08       		.byte	0x8
 622 0080 04       		.byte	0x4
 623 0081 69010000 		.4byte	.LASF10
 624 0085 02       		.uleb128 0x2
 625 0086 01       		.byte	0x1
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 28


 626 0087 08       		.byte	0x8
 627 0088 2B030000 		.4byte	.LASF11
 628 008c 04       		.uleb128 0x4
 629 008d 44010000 		.4byte	.LASF13
 630 0091 02       		.byte	0x2
 631 0092 3C02     		.2byte	0x23c
 632 0094 98000000 		.4byte	0x98
 633 0098 05       		.uleb128 0x5
 634 0099 6B000000 		.4byte	0x6b
 635 009d 02       		.uleb128 0x2
 636 009e 08       		.byte	0x8
 637 009f 04       		.byte	0x4
 638 00a0 30030000 		.4byte	.LASF14
 639 00a4 02       		.uleb128 0x2
 640 00a5 04       		.byte	0x4
 641 00a6 07       		.byte	0x7
 642 00a7 7D020000 		.4byte	.LASF15
 643 00ab 06       		.uleb128 0x6
 644 00ac F1010000 		.4byte	.LASF16
 645 00b0 01       		.byte	0x1
 646 00b1 C7       		.byte	0xc7
 647 00b2 00000000 		.4byte	.LFB2
 648 00b6 10000000 		.4byte	.LFE2-.LFB2
 649 00ba 01       		.uleb128 0x1
 650 00bb 9C       		.byte	0x9c
 651 00bc 06       		.uleb128 0x6
 652 00bd 14020000 		.4byte	.LASF17
 653 00c1 01       		.byte	0x1
 654 00c2 E9       		.byte	0xe9
 655 00c3 00000000 		.4byte	.LFB3
 656 00c7 10000000 		.4byte	.LFE3-.LFB3
 657 00cb 01       		.uleb128 0x1
 658 00cc 9C       		.byte	0x9c
 659 00cd 07       		.uleb128 0x7
 660 00ce C3020000 		.4byte	.LASF18
 661 00d2 01       		.byte	0x1
 662 00d3 9301     		.2byte	0x193
 663 00d5 00000000 		.4byte	.LFB4
 664 00d9 0C000000 		.4byte	.LFE4-.LFB4
 665 00dd 01       		.uleb128 0x1
 666 00de 9C       		.byte	0x9c
 667 00df F2000000 		.4byte	0xf2
 668 00e3 08       		.uleb128 0x8
 669 00e4 81000000 		.4byte	.LASF20
 670 00e8 01       		.byte	0x1
 671 00e9 9301     		.2byte	0x193
 672 00eb 6B000000 		.4byte	0x6b
 673 00ef 01       		.uleb128 0x1
 674 00f0 50       		.byte	0x50
 675 00f1 00       		.byte	0
 676 00f2 09       		.uleb128 0x9
 677 00f3 40020000 		.4byte	.LASF26
 678 00f7 01       		.byte	0x1
 679 00f8 A901     		.2byte	0x1a9
 680 00fa 6B000000 		.4byte	0x6b
 681 00fe 00000000 		.4byte	.LFB5
 682 0102 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 29


 683 0106 01       		.uleb128 0x1
 684 0107 9C       		.byte	0x9c
 685 0108 07       		.uleb128 0x7
 686 0109 E1020000 		.4byte	.LASF19
 687 010d 01       		.byte	0x1
 688 010e E201     		.2byte	0x1e2
 689 0110 00000000 		.4byte	.LFB7
 690 0114 0C000000 		.4byte	.LFE7-.LFB7
 691 0118 01       		.uleb128 0x1
 692 0119 9C       		.byte	0x9c
 693 011a 2D010000 		.4byte	0x12d
 694 011e 08       		.uleb128 0x8
 695 011f 2A000000 		.4byte	.LASF21
 696 0123 01       		.byte	0x1
 697 0124 E201     		.2byte	0x1e2
 698 0126 6B000000 		.4byte	0x6b
 699 012a 01       		.uleb128 0x1
 700 012b 50       		.byte	0x50
 701 012c 00       		.byte	0
 702 012d 07       		.uleb128 0x7
 703 012e 4D000000 		.4byte	.LASF22
 704 0132 01       		.byte	0x1
 705 0133 0402     		.2byte	0x204
 706 0135 00000000 		.4byte	.LFB8
 707 0139 0C000000 		.4byte	.LFE8-.LFB8
 708 013d 01       		.uleb128 0x1
 709 013e 9C       		.byte	0x9c
 710 013f 52010000 		.4byte	0x152
 711 0143 08       		.uleb128 0x8
 712 0144 48030000 		.4byte	.LASF23
 713 0148 01       		.byte	0x1
 714 0149 0402     		.2byte	0x204
 715 014b 6B000000 		.4byte	0x6b
 716 014f 01       		.uleb128 0x1
 717 0150 50       		.byte	0x50
 718 0151 00       		.byte	0
 719 0152 07       		.uleb128 0x7
 720 0153 FF010000 		.4byte	.LASF24
 721 0157 01       		.byte	0x1
 722 0158 6402     		.2byte	0x264
 723 015a 00000000 		.4byte	.LFB9
 724 015e 0C000000 		.4byte	.LFE9-.LFB9
 725 0162 01       		.uleb128 0x1
 726 0163 9C       		.byte	0x9c
 727 0164 77010000 		.4byte	0x177
 728 0168 08       		.uleb128 0x8
 729 0169 68030000 		.4byte	.LASF25
 730 016d 01       		.byte	0x1
 731 016e 6402     		.2byte	0x264
 732 0170 6B000000 		.4byte	0x6b
 733 0174 01       		.uleb128 0x1
 734 0175 50       		.byte	0x50
 735 0176 00       		.byte	0
 736 0177 09       		.uleb128 0x9
 737 0178 86020000 		.4byte	.LASF27
 738 017c 01       		.byte	0x1
 739 017d 8802     		.2byte	0x288
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 30


 740 017f 6B000000 		.4byte	0x6b
 741 0183 00000000 		.4byte	.LFB10
 742 0187 0C000000 		.4byte	.LFE10-.LFB10
 743 018b 01       		.uleb128 0x1
 744 018c 9C       		.byte	0x9c
 745 018d 07       		.uleb128 0x7
 746 018e 50030000 		.4byte	.LASF28
 747 0192 01       		.byte	0x1
 748 0193 AC02     		.2byte	0x2ac
 749 0195 00000000 		.4byte	.LFB11
 750 0199 0C000000 		.4byte	.LFE11-.LFB11
 751 019d 01       		.uleb128 0x1
 752 019e 9C       		.byte	0x9c
 753 019f B2010000 		.4byte	0x1b2
 754 01a3 08       		.uleb128 0x8
 755 01a4 B5020000 		.4byte	.LASF29
 756 01a8 01       		.byte	0x1
 757 01a9 AC02     		.2byte	0x2ac
 758 01ab 6B000000 		.4byte	0x6b
 759 01af 01       		.uleb128 0x1
 760 01b0 50       		.byte	0x50
 761 01b1 00       		.byte	0
 762 01b2 09       		.uleb128 0x9
 763 01b3 61000000 		.4byte	.LASF30
 764 01b7 01       		.byte	0x1
 765 01b8 C702     		.2byte	0x2c7
 766 01ba 6B000000 		.4byte	0x6b
 767 01be 00000000 		.4byte	.LFB12
 768 01c2 0C000000 		.4byte	.LFE12-.LFB12
 769 01c6 01       		.uleb128 0x1
 770 01c7 9C       		.byte	0x9c
 771 01c8 0A       		.uleb128 0xa
 772 01c9 F4020000 		.4byte	.LASF47
 773 01cd 01       		.byte	0x1
 774 01ce E102     		.2byte	0x2e1
 775 01d0 6B000000 		.4byte	0x6b
 776 01d4 00000000 		.4byte	.LFB13
 777 01d8 0C000000 		.4byte	.LFE13-.LFB13
 778 01dc 01       		.uleb128 0x1
 779 01dd 9C       		.byte	0x9c
 780 01de F1010000 		.4byte	0x1f1
 781 01e2 0B       		.uleb128 0xb
 782 01e3 11000000 		.4byte	.LASF36
 783 01e7 01       		.byte	0x1
 784 01e8 E302     		.2byte	0x2e3
 785 01ea 6B000000 		.4byte	0x6b
 786 01ee 01       		.uleb128 0x1
 787 01ef 50       		.byte	0x50
 788 01f0 00       		.byte	0
 789 01f1 07       		.uleb128 0x7
 790 01f2 0F030000 		.4byte	.LASF31
 791 01f6 01       		.byte	0x1
 792 01f7 FD02     		.2byte	0x2fd
 793 01f9 00000000 		.4byte	.LFB14
 794 01fd 0C000000 		.4byte	.LFE14-.LFB14
 795 0201 01       		.uleb128 0x1
 796 0202 9C       		.byte	0x9c
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 31


 797 0203 16020000 		.4byte	0x216
 798 0207 08       		.uleb128 0x8
 799 0208 61010000 		.4byte	.LASF32
 800 020c 01       		.byte	0x1
 801 020d FD02     		.2byte	0x2fd
 802 020f 6B000000 		.4byte	0x6b
 803 0213 01       		.uleb128 0x1
 804 0214 50       		.byte	0x50
 805 0215 00       		.byte	0
 806 0216 09       		.uleb128 0x9
 807 0217 C8010000 		.4byte	.LASF33
 808 021b 01       		.byte	0x1
 809 021c 1603     		.2byte	0x316
 810 021e 6B000000 		.4byte	0x6b
 811 0222 00000000 		.4byte	.LFB15
 812 0226 0C000000 		.4byte	.LFE15-.LFB15
 813 022a 01       		.uleb128 0x1
 814 022b 9C       		.byte	0x9c
 815 022c 07       		.uleb128 0x7
 816 022d 00000000 		.4byte	.LASF34
 817 0231 01       		.byte	0x1
 818 0232 C501     		.2byte	0x1c5
 819 0234 00000000 		.4byte	.LFB6
 820 0238 14000000 		.4byte	.LFE6-.LFB6
 821 023c 01       		.uleb128 0x1
 822 023d 9C       		.byte	0x9c
 823 023e 55020000 		.4byte	0x255
 824 0242 0C       		.uleb128 0xc
 825 0243 08000000 		.4byte	.LVL7
 826 0247 16020000 		.4byte	0x216
 827 024b 0C       		.uleb128 0xc
 828 024c 0C000000 		.4byte	.LVL8
 829 0250 B2010000 		.4byte	0x1b2
 830 0254 00       		.byte	0
 831 0255 0D       		.uleb128 0xd
 832 0256 89000000 		.4byte	.LASF35
 833 025a 01       		.byte	0x1
 834 025b 54       		.byte	0x54
 835 025c 00000000 		.4byte	.LFB1
 836 0260 58000000 		.4byte	.LFE1-.LFB1
 837 0264 01       		.uleb128 0x1
 838 0265 9C       		.byte	0x9c
 839 0266 06030000 		.4byte	0x306
 840 026a 0E       		.uleb128 0xe
 841 026b 62020000 		.4byte	.LASF37
 842 026f 01       		.byte	0x1
 843 0270 57       		.byte	0x57
 844 0271 6B000000 		.4byte	0x6b
 845 0275 00000000 		.4byte	.LLST0
 846 0279 0E       		.uleb128 0xe
 847 027a 67020000 		.4byte	.LASF38
 848 027e 01       		.byte	0x1
 849 027f 5D       		.byte	0x5d
 850 0280 6B000000 		.4byte	0x6b
 851 0284 13000000 		.4byte	.LLST1
 852 0288 0F       		.uleb128 0xf
 853 0289 20000000 		.4byte	.LVL11
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 32


 854 028d CD000000 		.4byte	0xcd
 855 0291 9C020000 		.4byte	0x29c
 856 0295 10       		.uleb128 0x10
 857 0296 01       		.uleb128 0x1
 858 0297 50       		.byte	0x50
 859 0298 02       		.uleb128 0x2
 860 0299 09       		.byte	0x9
 861 029a FF       		.byte	0xff
 862 029b 00       		.byte	0
 863 029c 0F       		.uleb128 0xf
 864 029d 26000000 		.4byte	.LVL12
 865 02a1 08010000 		.4byte	0x108
 866 02a5 B0020000 		.4byte	0x2b0
 867 02a9 10       		.uleb128 0x10
 868 02aa 01       		.uleb128 0x1
 869 02ab 50       		.byte	0x50
 870 02ac 02       		.uleb128 0x2
 871 02ad 09       		.byte	0x9
 872 02ae FF       		.byte	0xff
 873 02af 00       		.byte	0
 874 02b0 0F       		.uleb128 0xf
 875 02b1 2C000000 		.4byte	.LVL13
 876 02b5 2D010000 		.4byte	0x12d
 877 02b9 C4020000 		.4byte	0x2c4
 878 02bd 10       		.uleb128 0x10
 879 02be 01       		.uleb128 0x1
 880 02bf 50       		.byte	0x50
 881 02c0 02       		.uleb128 0x2
 882 02c1 08       		.byte	0x8
 883 02c2 32       		.byte	0x32
 884 02c3 00       		.byte	0
 885 02c4 0F       		.uleb128 0xf
 886 02c5 32000000 		.4byte	.LVL14
 887 02c9 52010000 		.4byte	0x152
 888 02cd D7020000 		.4byte	0x2d7
 889 02d1 10       		.uleb128 0x10
 890 02d2 01       		.uleb128 0x1
 891 02d3 50       		.byte	0x50
 892 02d4 01       		.uleb128 0x1
 893 02d5 34       		.byte	0x34
 894 02d6 00       		.byte	0
 895 02d7 0F       		.uleb128 0xf
 896 02d8 38000000 		.4byte	.LVL15
 897 02dc 8D010000 		.4byte	0x18d
 898 02e0 EA020000 		.4byte	0x2ea
 899 02e4 10       		.uleb128 0x10
 900 02e5 01       		.uleb128 0x1
 901 02e6 50       		.byte	0x50
 902 02e7 01       		.uleb128 0x1
 903 02e8 30       		.byte	0x30
 904 02e9 00       		.byte	0
 905 02ea 0C       		.uleb128 0xc
 906 02eb 3C000000 		.4byte	.LVL16
 907 02ef 6B030000 		.4byte	0x36b
 908 02f3 0C       		.uleb128 0xc
 909 02f4 48000000 		.4byte	.LVL17
 910 02f8 76030000 		.4byte	0x376
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 33


 911 02fc 0C       		.uleb128 0xc
 912 02fd 4C000000 		.4byte	.LVL18
 913 0301 2C020000 		.4byte	0x22c
 914 0305 00       		.byte	0
 915 0306 0D       		.uleb128 0xd
 916 0307 A8020000 		.4byte	.LASF39
 917 030b 01       		.byte	0x1
 918 030c 37       		.byte	0x37
 919 030d 00000000 		.4byte	.LFB0
 920 0311 1C000000 		.4byte	.LFE0-.LFB0
 921 0315 01       		.uleb128 0x1
 922 0316 9C       		.byte	0x9c
 923 0317 2E030000 		.4byte	0x32e
 924 031b 0C       		.uleb128 0xc
 925 031c 0C000000 		.4byte	.LVL19
 926 0320 55020000 		.4byte	0x255
 927 0324 0C       		.uleb128 0xc
 928 0325 16000000 		.4byte	.LVL20
 929 0329 AB000000 		.4byte	0xab
 930 032d 00       		.byte	0
 931 032e 09       		.uleb128 0x9
 932 032f 95000000 		.4byte	.LASF40
 933 0333 01       		.byte	0x1
 934 0334 3003     		.2byte	0x330
 935 0336 6B000000 		.4byte	0x6b
 936 033a 00000000 		.4byte	.LFB16
 937 033e 0C000000 		.4byte	.LFE16-.LFB16
 938 0342 01       		.uleb128 0x1
 939 0343 9C       		.byte	0x9c
 940 0344 09       		.uleb128 0x9
 941 0345 18000000 		.4byte	.LASF41
 942 0349 01       		.byte	0x1
 943 034a 7403     		.2byte	0x374
 944 034c 6B000000 		.4byte	0x6b
 945 0350 00000000 		.4byte	.LFB17
 946 0354 0C000000 		.4byte	.LFE17-.LFB17
 947 0358 01       		.uleb128 0x1
 948 0359 9C       		.byte	0x9c
 949 035a 11       		.uleb128 0x11
 950 035b 53020000 		.4byte	.LASF48
 951 035f 01       		.byte	0x1
 952 0360 20       		.byte	0x20
 953 0361 6B000000 		.4byte	0x6b
 954 0365 05       		.uleb128 0x5
 955 0366 03       		.byte	0x3
 956 0367 00000000 		.4byte	motor2_initVar
 957 036b 12       		.uleb128 0x12
 958 036c A4010000 		.4byte	.LASF42
 959 0370 A4010000 		.4byte	.LASF42
 960 0374 03       		.byte	0x3
 961 0375 7D       		.byte	0x7d
 962 0376 12       		.uleb128 0x12
 963 0377 DB010000 		.4byte	.LASF43
 964 037b DB010000 		.4byte	.LASF43
 965 037f 03       		.byte	0x3
 966 0380 7E       		.byte	0x7e
 967 0381 00       		.byte	0
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 34


 968              		.section	.debug_abbrev,"",%progbits
 969              	.Ldebug_abbrev0:
 970 0000 01       		.uleb128 0x1
 971 0001 11       		.uleb128 0x11
 972 0002 01       		.byte	0x1
 973 0003 25       		.uleb128 0x25
 974 0004 0E       		.uleb128 0xe
 975 0005 13       		.uleb128 0x13
 976 0006 0B       		.uleb128 0xb
 977 0007 03       		.uleb128 0x3
 978 0008 0E       		.uleb128 0xe
 979 0009 1B       		.uleb128 0x1b
 980 000a 0E       		.uleb128 0xe
 981 000b 55       		.uleb128 0x55
 982 000c 17       		.uleb128 0x17
 983 000d 11       		.uleb128 0x11
 984 000e 01       		.uleb128 0x1
 985 000f 10       		.uleb128 0x10
 986 0010 17       		.uleb128 0x17
 987 0011 00       		.byte	0
 988 0012 00       		.byte	0
 989 0013 02       		.uleb128 0x2
 990 0014 24       		.uleb128 0x24
 991 0015 00       		.byte	0
 992 0016 0B       		.uleb128 0xb
 993 0017 0B       		.uleb128 0xb
 994 0018 3E       		.uleb128 0x3e
 995 0019 0B       		.uleb128 0xb
 996 001a 03       		.uleb128 0x3
 997 001b 0E       		.uleb128 0xe
 998 001c 00       		.byte	0
 999 001d 00       		.byte	0
 1000 001e 03       		.uleb128 0x3
 1001 001f 24       		.uleb128 0x24
 1002 0020 00       		.byte	0
 1003 0021 0B       		.uleb128 0xb
 1004 0022 0B       		.uleb128 0xb
 1005 0023 3E       		.uleb128 0x3e
 1006 0024 0B       		.uleb128 0xb
 1007 0025 03       		.uleb128 0x3
 1008 0026 08       		.uleb128 0x8
 1009 0027 00       		.byte	0
 1010 0028 00       		.byte	0
 1011 0029 04       		.uleb128 0x4
 1012 002a 16       		.uleb128 0x16
 1013 002b 00       		.byte	0
 1014 002c 03       		.uleb128 0x3
 1015 002d 0E       		.uleb128 0xe
 1016 002e 3A       		.uleb128 0x3a
 1017 002f 0B       		.uleb128 0xb
 1018 0030 3B       		.uleb128 0x3b
 1019 0031 05       		.uleb128 0x5
 1020 0032 49       		.uleb128 0x49
 1021 0033 13       		.uleb128 0x13
 1022 0034 00       		.byte	0
 1023 0035 00       		.byte	0
 1024 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 35


 1025 0037 35       		.uleb128 0x35
 1026 0038 00       		.byte	0
 1027 0039 49       		.uleb128 0x49
 1028 003a 13       		.uleb128 0x13
 1029 003b 00       		.byte	0
 1030 003c 00       		.byte	0
 1031 003d 06       		.uleb128 0x6
 1032 003e 2E       		.uleb128 0x2e
 1033 003f 00       		.byte	0
 1034 0040 3F       		.uleb128 0x3f
 1035 0041 19       		.uleb128 0x19
 1036 0042 03       		.uleb128 0x3
 1037 0043 0E       		.uleb128 0xe
 1038 0044 3A       		.uleb128 0x3a
 1039 0045 0B       		.uleb128 0xb
 1040 0046 3B       		.uleb128 0x3b
 1041 0047 0B       		.uleb128 0xb
 1042 0048 27       		.uleb128 0x27
 1043 0049 19       		.uleb128 0x19
 1044 004a 11       		.uleb128 0x11
 1045 004b 01       		.uleb128 0x1
 1046 004c 12       		.uleb128 0x12
 1047 004d 06       		.uleb128 0x6
 1048 004e 40       		.uleb128 0x40
 1049 004f 18       		.uleb128 0x18
 1050 0050 9742     		.uleb128 0x2117
 1051 0052 19       		.uleb128 0x19
 1052 0053 00       		.byte	0
 1053 0054 00       		.byte	0
 1054 0055 07       		.uleb128 0x7
 1055 0056 2E       		.uleb128 0x2e
 1056 0057 01       		.byte	0x1
 1057 0058 3F       		.uleb128 0x3f
 1058 0059 19       		.uleb128 0x19
 1059 005a 03       		.uleb128 0x3
 1060 005b 0E       		.uleb128 0xe
 1061 005c 3A       		.uleb128 0x3a
 1062 005d 0B       		.uleb128 0xb
 1063 005e 3B       		.uleb128 0x3b
 1064 005f 05       		.uleb128 0x5
 1065 0060 27       		.uleb128 0x27
 1066 0061 19       		.uleb128 0x19
 1067 0062 11       		.uleb128 0x11
 1068 0063 01       		.uleb128 0x1
 1069 0064 12       		.uleb128 0x12
 1070 0065 06       		.uleb128 0x6
 1071 0066 40       		.uleb128 0x40
 1072 0067 18       		.uleb128 0x18
 1073 0068 9742     		.uleb128 0x2117
 1074 006a 19       		.uleb128 0x19
 1075 006b 01       		.uleb128 0x1
 1076 006c 13       		.uleb128 0x13
 1077 006d 00       		.byte	0
 1078 006e 00       		.byte	0
 1079 006f 08       		.uleb128 0x8
 1080 0070 05       		.uleb128 0x5
 1081 0071 00       		.byte	0
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 36


 1082 0072 03       		.uleb128 0x3
 1083 0073 0E       		.uleb128 0xe
 1084 0074 3A       		.uleb128 0x3a
 1085 0075 0B       		.uleb128 0xb
 1086 0076 3B       		.uleb128 0x3b
 1087 0077 05       		.uleb128 0x5
 1088 0078 49       		.uleb128 0x49
 1089 0079 13       		.uleb128 0x13
 1090 007a 02       		.uleb128 0x2
 1091 007b 18       		.uleb128 0x18
 1092 007c 00       		.byte	0
 1093 007d 00       		.byte	0
 1094 007e 09       		.uleb128 0x9
 1095 007f 2E       		.uleb128 0x2e
 1096 0080 00       		.byte	0
 1097 0081 3F       		.uleb128 0x3f
 1098 0082 19       		.uleb128 0x19
 1099 0083 03       		.uleb128 0x3
 1100 0084 0E       		.uleb128 0xe
 1101 0085 3A       		.uleb128 0x3a
 1102 0086 0B       		.uleb128 0xb
 1103 0087 3B       		.uleb128 0x3b
 1104 0088 05       		.uleb128 0x5
 1105 0089 27       		.uleb128 0x27
 1106 008a 19       		.uleb128 0x19
 1107 008b 49       		.uleb128 0x49
 1108 008c 13       		.uleb128 0x13
 1109 008d 11       		.uleb128 0x11
 1110 008e 01       		.uleb128 0x1
 1111 008f 12       		.uleb128 0x12
 1112 0090 06       		.uleb128 0x6
 1113 0091 40       		.uleb128 0x40
 1114 0092 18       		.uleb128 0x18
 1115 0093 9742     		.uleb128 0x2117
 1116 0095 19       		.uleb128 0x19
 1117 0096 00       		.byte	0
 1118 0097 00       		.byte	0
 1119 0098 0A       		.uleb128 0xa
 1120 0099 2E       		.uleb128 0x2e
 1121 009a 01       		.byte	0x1
 1122 009b 3F       		.uleb128 0x3f
 1123 009c 19       		.uleb128 0x19
 1124 009d 03       		.uleb128 0x3
 1125 009e 0E       		.uleb128 0xe
 1126 009f 3A       		.uleb128 0x3a
 1127 00a0 0B       		.uleb128 0xb
 1128 00a1 3B       		.uleb128 0x3b
 1129 00a2 05       		.uleb128 0x5
 1130 00a3 27       		.uleb128 0x27
 1131 00a4 19       		.uleb128 0x19
 1132 00a5 49       		.uleb128 0x49
 1133 00a6 13       		.uleb128 0x13
 1134 00a7 11       		.uleb128 0x11
 1135 00a8 01       		.uleb128 0x1
 1136 00a9 12       		.uleb128 0x12
 1137 00aa 06       		.uleb128 0x6
 1138 00ab 40       		.uleb128 0x40
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 37


 1139 00ac 18       		.uleb128 0x18
 1140 00ad 9742     		.uleb128 0x2117
 1141 00af 19       		.uleb128 0x19
 1142 00b0 01       		.uleb128 0x1
 1143 00b1 13       		.uleb128 0x13
 1144 00b2 00       		.byte	0
 1145 00b3 00       		.byte	0
 1146 00b4 0B       		.uleb128 0xb
 1147 00b5 34       		.uleb128 0x34
 1148 00b6 00       		.byte	0
 1149 00b7 03       		.uleb128 0x3
 1150 00b8 0E       		.uleb128 0xe
 1151 00b9 3A       		.uleb128 0x3a
 1152 00ba 0B       		.uleb128 0xb
 1153 00bb 3B       		.uleb128 0x3b
 1154 00bc 05       		.uleb128 0x5
 1155 00bd 49       		.uleb128 0x49
 1156 00be 13       		.uleb128 0x13
 1157 00bf 02       		.uleb128 0x2
 1158 00c0 18       		.uleb128 0x18
 1159 00c1 00       		.byte	0
 1160 00c2 00       		.byte	0
 1161 00c3 0C       		.uleb128 0xc
 1162 00c4 898201   		.uleb128 0x4109
 1163 00c7 00       		.byte	0
 1164 00c8 11       		.uleb128 0x11
 1165 00c9 01       		.uleb128 0x1
 1166 00ca 31       		.uleb128 0x31
 1167 00cb 13       		.uleb128 0x13
 1168 00cc 00       		.byte	0
 1169 00cd 00       		.byte	0
 1170 00ce 0D       		.uleb128 0xd
 1171 00cf 2E       		.uleb128 0x2e
 1172 00d0 01       		.byte	0x1
 1173 00d1 3F       		.uleb128 0x3f
 1174 00d2 19       		.uleb128 0x19
 1175 00d3 03       		.uleb128 0x3
 1176 00d4 0E       		.uleb128 0xe
 1177 00d5 3A       		.uleb128 0x3a
 1178 00d6 0B       		.uleb128 0xb
 1179 00d7 3B       		.uleb128 0x3b
 1180 00d8 0B       		.uleb128 0xb
 1181 00d9 27       		.uleb128 0x27
 1182 00da 19       		.uleb128 0x19
 1183 00db 11       		.uleb128 0x11
 1184 00dc 01       		.uleb128 0x1
 1185 00dd 12       		.uleb128 0x12
 1186 00de 06       		.uleb128 0x6
 1187 00df 40       		.uleb128 0x40
 1188 00e0 18       		.uleb128 0x18
 1189 00e1 9742     		.uleb128 0x2117
 1190 00e3 19       		.uleb128 0x19
 1191 00e4 01       		.uleb128 0x1
 1192 00e5 13       		.uleb128 0x13
 1193 00e6 00       		.byte	0
 1194 00e7 00       		.byte	0
 1195 00e8 0E       		.uleb128 0xe
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 38


 1196 00e9 34       		.uleb128 0x34
 1197 00ea 00       		.byte	0
 1198 00eb 03       		.uleb128 0x3
 1199 00ec 0E       		.uleb128 0xe
 1200 00ed 3A       		.uleb128 0x3a
 1201 00ee 0B       		.uleb128 0xb
 1202 00ef 3B       		.uleb128 0x3b
 1203 00f0 0B       		.uleb128 0xb
 1204 00f1 49       		.uleb128 0x49
 1205 00f2 13       		.uleb128 0x13
 1206 00f3 02       		.uleb128 0x2
 1207 00f4 17       		.uleb128 0x17
 1208 00f5 00       		.byte	0
 1209 00f6 00       		.byte	0
 1210 00f7 0F       		.uleb128 0xf
 1211 00f8 898201   		.uleb128 0x4109
 1212 00fb 01       		.byte	0x1
 1213 00fc 11       		.uleb128 0x11
 1214 00fd 01       		.uleb128 0x1
 1215 00fe 31       		.uleb128 0x31
 1216 00ff 13       		.uleb128 0x13
 1217 0100 01       		.uleb128 0x1
 1218 0101 13       		.uleb128 0x13
 1219 0102 00       		.byte	0
 1220 0103 00       		.byte	0
 1221 0104 10       		.uleb128 0x10
 1222 0105 8A8201   		.uleb128 0x410a
 1223 0108 00       		.byte	0
 1224 0109 02       		.uleb128 0x2
 1225 010a 18       		.uleb128 0x18
 1226 010b 9142     		.uleb128 0x2111
 1227 010d 18       		.uleb128 0x18
 1228 010e 00       		.byte	0
 1229 010f 00       		.byte	0
 1230 0110 11       		.uleb128 0x11
 1231 0111 34       		.uleb128 0x34
 1232 0112 00       		.byte	0
 1233 0113 03       		.uleb128 0x3
 1234 0114 0E       		.uleb128 0xe
 1235 0115 3A       		.uleb128 0x3a
 1236 0116 0B       		.uleb128 0xb
 1237 0117 3B       		.uleb128 0x3b
 1238 0118 0B       		.uleb128 0xb
 1239 0119 49       		.uleb128 0x49
 1240 011a 13       		.uleb128 0x13
 1241 011b 3F       		.uleb128 0x3f
 1242 011c 19       		.uleb128 0x19
 1243 011d 02       		.uleb128 0x2
 1244 011e 18       		.uleb128 0x18
 1245 011f 00       		.byte	0
 1246 0120 00       		.byte	0
 1247 0121 12       		.uleb128 0x12
 1248 0122 2E       		.uleb128 0x2e
 1249 0123 00       		.byte	0
 1250 0124 3F       		.uleb128 0x3f
 1251 0125 19       		.uleb128 0x19
 1252 0126 3C       		.uleb128 0x3c
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 39


 1253 0127 19       		.uleb128 0x19
 1254 0128 6E       		.uleb128 0x6e
 1255 0129 0E       		.uleb128 0xe
 1256 012a 03       		.uleb128 0x3
 1257 012b 0E       		.uleb128 0xe
 1258 012c 3A       		.uleb128 0x3a
 1259 012d 0B       		.uleb128 0xb
 1260 012e 3B       		.uleb128 0x3b
 1261 012f 0B       		.uleb128 0xb
 1262 0130 00       		.byte	0
 1263 0131 00       		.byte	0
 1264 0132 00       		.byte	0
 1265              		.section	.debug_loc,"",%progbits
 1266              	.Ldebug_loc0:
 1267              	.LLST0:
 1268 0000 0A000000 		.4byte	.LVL9
 1269 0004 0E000000 		.4byte	.LVL10
 1270 0008 0100     		.2byte	0x1
 1271 000a 53       		.byte	0x53
 1272 000b 00000000 		.4byte	0
 1273 000f 00000000 		.4byte	0
 1274              	.LLST1:
 1275 0013 3C000000 		.4byte	.LVL16
 1276 0017 47000000 		.4byte	.LVL17-1
 1277 001b 0100     		.2byte	0x1
 1278 001d 50       		.byte	0x50
 1279 001e 00000000 		.4byte	0
 1280 0022 00000000 		.4byte	0
 1281              		.section	.debug_aranges,"",%progbits
 1282 0000 A4000000 		.4byte	0xa4
 1283 0004 0200     		.2byte	0x2
 1284 0006 00000000 		.4byte	.Ldebug_info0
 1285 000a 04       		.byte	0x4
 1286 000b 00       		.byte	0
 1287 000c 0000     		.2byte	0
 1288 000e 0000     		.2byte	0
 1289 0010 00000000 		.4byte	.LFB2
 1290 0014 10000000 		.4byte	.LFE2-.LFB2
 1291 0018 00000000 		.4byte	.LFB3
 1292 001c 10000000 		.4byte	.LFE3-.LFB3
 1293 0020 00000000 		.4byte	.LFB4
 1294 0024 0C000000 		.4byte	.LFE4-.LFB4
 1295 0028 00000000 		.4byte	.LFB5
 1296 002c 14000000 		.4byte	.LFE5-.LFB5
 1297 0030 00000000 		.4byte	.LFB7
 1298 0034 0C000000 		.4byte	.LFE7-.LFB7
 1299 0038 00000000 		.4byte	.LFB8
 1300 003c 0C000000 		.4byte	.LFE8-.LFB8
 1301 0040 00000000 		.4byte	.LFB9
 1302 0044 0C000000 		.4byte	.LFE9-.LFB9
 1303 0048 00000000 		.4byte	.LFB10
 1304 004c 0C000000 		.4byte	.LFE10-.LFB10
 1305 0050 00000000 		.4byte	.LFB11
 1306 0054 0C000000 		.4byte	.LFE11-.LFB11
 1307 0058 00000000 		.4byte	.LFB12
 1308 005c 0C000000 		.4byte	.LFE12-.LFB12
 1309 0060 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 40


 1310 0064 0C000000 		.4byte	.LFE13-.LFB13
 1311 0068 00000000 		.4byte	.LFB14
 1312 006c 0C000000 		.4byte	.LFE14-.LFB14
 1313 0070 00000000 		.4byte	.LFB15
 1314 0074 0C000000 		.4byte	.LFE15-.LFB15
 1315 0078 00000000 		.4byte	.LFB6
 1316 007c 14000000 		.4byte	.LFE6-.LFB6
 1317 0080 00000000 		.4byte	.LFB1
 1318 0084 58000000 		.4byte	.LFE1-.LFB1
 1319 0088 00000000 		.4byte	.LFB0
 1320 008c 1C000000 		.4byte	.LFE0-.LFB0
 1321 0090 00000000 		.4byte	.LFB16
 1322 0094 0C000000 		.4byte	.LFE16-.LFB16
 1323 0098 00000000 		.4byte	.LFB17
 1324 009c 0C000000 		.4byte	.LFE17-.LFB17
 1325 00a0 00000000 		.4byte	0
 1326 00a4 00000000 		.4byte	0
 1327              		.section	.debug_ranges,"",%progbits
 1328              	.Ldebug_ranges0:
 1329 0000 00000000 		.4byte	.LFB2
 1330 0004 10000000 		.4byte	.LFE2
 1331 0008 00000000 		.4byte	.LFB3
 1332 000c 10000000 		.4byte	.LFE3
 1333 0010 00000000 		.4byte	.LFB4
 1334 0014 0C000000 		.4byte	.LFE4
 1335 0018 00000000 		.4byte	.LFB5
 1336 001c 14000000 		.4byte	.LFE5
 1337 0020 00000000 		.4byte	.LFB7
 1338 0024 0C000000 		.4byte	.LFE7
 1339 0028 00000000 		.4byte	.LFB8
 1340 002c 0C000000 		.4byte	.LFE8
 1341 0030 00000000 		.4byte	.LFB9
 1342 0034 0C000000 		.4byte	.LFE9
 1343 0038 00000000 		.4byte	.LFB10
 1344 003c 0C000000 		.4byte	.LFE10
 1345 0040 00000000 		.4byte	.LFB11
 1346 0044 0C000000 		.4byte	.LFE11
 1347 0048 00000000 		.4byte	.LFB12
 1348 004c 0C000000 		.4byte	.LFE12
 1349 0050 00000000 		.4byte	.LFB13
 1350 0054 0C000000 		.4byte	.LFE13
 1351 0058 00000000 		.4byte	.LFB14
 1352 005c 0C000000 		.4byte	.LFE14
 1353 0060 00000000 		.4byte	.LFB15
 1354 0064 0C000000 		.4byte	.LFE15
 1355 0068 00000000 		.4byte	.LFB6
 1356 006c 14000000 		.4byte	.LFE6
 1357 0070 00000000 		.4byte	.LFB1
 1358 0074 58000000 		.4byte	.LFE1
 1359 0078 00000000 		.4byte	.LFB0
 1360 007c 1C000000 		.4byte	.LFE0
 1361 0080 00000000 		.4byte	.LFB16
 1362 0084 0C000000 		.4byte	.LFE16
 1363 0088 00000000 		.4byte	.LFB17
 1364 008c 0C000000 		.4byte	.LFE17
 1365 0090 00000000 		.4byte	0
 1366 0094 00000000 		.4byte	0
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 41


 1367              		.section	.debug_line,"",%progbits
 1368              	.Ldebug_line0:
 1369 0000 A8010000 		.section	.debug_str,"MS",%progbits,1
 1369      02004E00 
 1369      00000201 
 1369      FB0E0D00 
 1369      01010101 
 1370              	.LASF34:
 1371 0000 6D6F746F 		.ascii	"motor2_ClearFIFO\000"
 1371      72325F43 
 1371      6C656172 
 1371      4649464F 
 1371      00
 1372              	.LASF36:
 1373 0011 72657375 		.ascii	"result\000"
 1373      6C7400
 1374              	.LASF41:
 1375 0018 6D6F746F 		.ascii	"motor2_ReadPeriod\000"
 1375      72325F52 
 1375      65616450 
 1375      6572696F 
 1375      6400
 1376              	.LASF21:
 1377 002a 70657269 		.ascii	"period\000"
 1377      6F6400
 1378              	.LASF4:
 1379 0031 6C6F6E67 		.ascii	"long int\000"
 1379      20696E74 
 1379      00
 1380              	.LASF3:
 1381 003a 73686F72 		.ascii	"short unsigned int\000"
 1381      7420756E 
 1381      7369676E 
 1381      65642069 
 1381      6E7400
 1382              	.LASF22:
 1383 004d 6D6F746F 		.ascii	"motor2_WriteCompare\000"
 1383      72325F57 
 1383      72697465 
 1383      436F6D70 
 1383      61726500 
 1384              	.LASF30:
 1385 0061 6D6F746F 		.ascii	"motor2_ReadStatusRegister\000"
 1385      72325F52 
 1385      65616453 
 1385      74617475 
 1385      73526567 
 1386              	.LASF9:
 1387 007b 666C6F61 		.ascii	"float\000"
 1387      7400
 1388              	.LASF20:
 1389 0081 636F756E 		.ascii	"counter\000"
 1389      74657200 
 1390              	.LASF35:
 1391 0089 6D6F746F 		.ascii	"motor2_Init\000"
 1391      72325F49 
 1391      6E697400 
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 42


 1392              	.LASF40:
 1393 0095 6D6F746F 		.ascii	"motor2_ReadCompare\000"
 1393      72325F52 
 1393      65616443 
 1393      6F6D7061 
 1393      726500
 1394              	.LASF1:
 1395 00a8 756E7369 		.ascii	"unsigned char\000"
 1395      676E6564 
 1395      20636861 
 1395      7200
 1396              	.LASF44:
 1397 00b6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1397      43313120 
 1397      352E342E 
 1397      31203230 
 1397      31363036 
 1398 00e9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1398      20726576 
 1398      6973696F 
 1398      6E203233 
 1398      37373135 
 1399 011c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1399      66756E63 
 1399      74696F6E 
 1399      2D736563 
 1399      74696F6E 
 1400              	.LASF13:
 1401 0144 72656738 		.ascii	"reg8\000"
 1401      00
 1402              	.LASF5:
 1403 0149 6C6F6E67 		.ascii	"long unsigned int\000"
 1403      20756E73 
 1403      69676E65 
 1403      6420696E 
 1403      7400
 1404              	.LASF12:
 1405 015b 75696E74 		.ascii	"uint8\000"
 1405      3800
 1406              	.LASF32:
 1407 0161 636F6E74 		.ascii	"control\000"
 1407      726F6C00 
 1408              	.LASF10:
 1409 0169 646F7562 		.ascii	"double\000"
 1409      6C6500
 1410              	.LASF46:
 1411 0170 433A5C55 		.ascii	"C:\\Users\\tetsuya\\Documents\\motor_yao\\Design01."
 1411      73657273 
 1411      5C746574 
 1411      73757961 
 1411      5C446F63 
 1412 019e 63796473 		.ascii	"cydsn\000"
 1412      6E00
 1413              	.LASF42:
 1414 01a4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1414      74657243 
 1414      72697469 
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 43


 1414      63616C53 
 1414      65637469 
 1415              	.LASF8:
 1416 01bb 756E7369 		.ascii	"unsigned int\000"
 1416      676E6564 
 1416      20696E74 
 1416      00
 1417              	.LASF33:
 1418 01c8 6D6F746F 		.ascii	"motor2_ReadCapture\000"
 1418      72325F52 
 1418      65616443 
 1418      61707475 
 1418      726500
 1419              	.LASF43:
 1420 01db 43794578 		.ascii	"CyExitCriticalSection\000"
 1420      69744372 
 1420      69746963 
 1420      616C5365 
 1420      6374696F 
 1421              	.LASF16:
 1422 01f1 6D6F746F 		.ascii	"motor2_Enable\000"
 1422      72325F45 
 1422      6E61626C 
 1422      6500
 1423              	.LASF24:
 1424 01ff 6D6F746F 		.ascii	"motor2_WriteDeadTime\000"
 1424      72325F57 
 1424      72697465 
 1424      44656164 
 1424      54696D65 
 1425              	.LASF17:
 1426 0214 6D6F746F 		.ascii	"motor2_Stop\000"
 1426      72325F53 
 1426      746F7000 
 1427              	.LASF45:
 1428 0220 47656E65 		.ascii	"Generated_Source\\PSoC5\\motor2.c\000"
 1428      72617465 
 1428      645F536F 
 1428      75726365 
 1428      5C50536F 
 1429              	.LASF26:
 1430 0240 6D6F746F 		.ascii	"motor2_ReadCounter\000"
 1430      72325F52 
 1430      65616443 
 1430      6F756E74 
 1430      657200
 1431              	.LASF48:
 1432 0253 6D6F746F 		.ascii	"motor2_initVar\000"
 1432      72325F69 
 1432      6E697456 
 1432      617200
 1433              	.LASF37:
 1434 0262 6374726C 		.ascii	"ctrl\000"
 1434      00
 1435              	.LASF38:
 1436 0267 6D6F746F 		.ascii	"motor2_interruptState\000"
 1436      72325F69 
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 44


 1436      6E746572 
 1436      72757074 
 1436      53746174 
 1437              	.LASF15:
 1438 027d 73697A65 		.ascii	"sizetype\000"
 1438      74797065 
 1438      00
 1439              	.LASF27:
 1440 0286 6D6F746F 		.ascii	"motor2_ReadDeadTime\000"
 1440      72325F52 
 1440      65616444 
 1440      65616454 
 1440      696D6500 
 1441              	.LASF6:
 1442 029a 6C6F6E67 		.ascii	"long long int\000"
 1442      206C6F6E 
 1442      6720696E 
 1442      7400
 1443              	.LASF39:
 1444 02a8 6D6F746F 		.ascii	"motor2_Start\000"
 1444      72325F53 
 1444      74617274 
 1444      00
 1445              	.LASF29:
 1446 02b5 696E7465 		.ascii	"interruptMode\000"
 1446      72727570 
 1446      744D6F64 
 1446      6500
 1447              	.LASF18:
 1448 02c3 6D6F746F 		.ascii	"motor2_WriteCounter\000"
 1448      72325F57 
 1448      72697465 
 1448      436F756E 
 1448      74657200 
 1449              	.LASF2:
 1450 02d7 73686F72 		.ascii	"short int\000"
 1450      7420696E 
 1450      7400
 1451              	.LASF19:
 1452 02e1 6D6F746F 		.ascii	"motor2_WritePeriod\000"
 1452      72325F57 
 1452      72697465 
 1452      50657269 
 1452      6F6400
 1453              	.LASF47:
 1454 02f4 6D6F746F 		.ascii	"motor2_ReadControlRegister\000"
 1454      72325F52 
 1454      65616443 
 1454      6F6E7472 
 1454      6F6C5265 
 1455              	.LASF31:
 1456 030f 6D6F746F 		.ascii	"motor2_WriteControlRegister\000"
 1456      72325F57 
 1456      72697465 
 1456      436F6E74 
 1456      726F6C52 
 1457              	.LASF11:
ARM GAS  C:\Users\tetsuya\AppData\Local\Temp\ccXG532R.s 			page 45


 1458 032b 63686172 		.ascii	"char\000"
 1458      00
 1459              	.LASF14:
 1460 0330 6C6F6E67 		.ascii	"long double\000"
 1460      20646F75 
 1460      626C6500 
 1461              	.LASF0:
 1462 033c 7369676E 		.ascii	"signed char\000"
 1462      65642063 
 1462      68617200 
 1463              	.LASF23:
 1464 0348 636F6D70 		.ascii	"compare\000"
 1464      61726500 
 1465              	.LASF28:
 1466 0350 6D6F746F 		.ascii	"motor2_SetInterruptMode\000"
 1466      72325F53 
 1466      6574496E 
 1466      74657272 
 1466      7570744D 
 1467              	.LASF25:
 1468 0368 64656164 		.ascii	"deadtime\000"
 1468      74696D65 
 1468      00
 1469              	.LASF7:
 1470 0371 6C6F6E67 		.ascii	"long long unsigned int\000"
 1470      206C6F6E 
 1470      6720756E 
 1470      7369676E 
 1470      65642069 
 1471              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
