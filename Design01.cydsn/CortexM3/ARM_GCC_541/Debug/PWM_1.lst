ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_1_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_1_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_1_Enable, %function
  25              	PWM_1_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_1.c"
   1:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_1.c **** *
   5:Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_1.c **** *
  15:Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:Generated_Source\PSoC5/PWM_1.c **** *
  17:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_1.c **** 
  24:Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
  25:Generated_Source\PSoC5/PWM_1.c **** 
  26:Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 2


  31:Generated_Source\PSoC5/PWM_1.c **** 
  32:Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_1.c **** 
  34:Generated_Source\PSoC5/PWM_1.c **** 
  35:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_1.c **** *
  39:Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_1.c **** *
  44:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_1.c **** *  None
  46:Generated_Source\PSoC5/PWM_1.c **** *
  47:Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:Generated_Source\PSoC5/PWM_1.c **** *  None
  49:Generated_Source\PSoC5/PWM_1.c **** *
  50:Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_1.c **** *
  54:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:Generated_Source\PSoC5/PWM_1.c **** {
  57:Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_1.c ****     {
  60:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  61:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_1.c ****     }
  63:Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  64:Generated_Source\PSoC5/PWM_1.c **** 
  65:Generated_Source\PSoC5/PWM_1.c **** }
  66:Generated_Source\PSoC5/PWM_1.c **** 
  67:Generated_Source\PSoC5/PWM_1.c **** 
  68:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_1.c **** *
  72:Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:Generated_Source\PSoC5/PWM_1.c **** *
  77:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_1.c **** *  None
  79:Generated_Source\PSoC5/PWM_1.c **** *
  80:Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:Generated_Source\PSoC5/PWM_1.c **** *  None
  82:Generated_Source\PSoC5/PWM_1.c **** *
  83:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:Generated_Source\PSoC5/PWM_1.c **** {
  86:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 3


  88:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:Generated_Source\PSoC5/PWM_1.c **** 
  90:Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_1.c **** 
  97:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_1.c **** 
 104:Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_1.c **** 
 107:Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:Generated_Source\PSoC5/PWM_1.c **** 
 111:Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_1.c **** 
 115:Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_1.c **** 
 123:Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_1.c **** 
 133:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_1.c **** 
 136:Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_1.c **** 
 138:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_1.c ****         #else
 141:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 4


 145:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_1.c **** 
 149:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_1.c **** 
 153:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_1.c **** 
 157:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_1.c ****     #else
 163:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:Generated_Source\PSoC5/PWM_1.c **** 
 165:Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_1.c **** 
 171:Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:Generated_Source\PSoC5/PWM_1.c **** 
 174:Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_1.c **** }
 180:Generated_Source\PSoC5/PWM_1.c **** 
 181:Generated_Source\PSoC5/PWM_1.c **** 
 182:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_1.c **** *
 186:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_1.c **** *
 189:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_1.c **** *  None
 191:Generated_Source\PSoC5/PWM_1.c **** *
 192:Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:Generated_Source\PSoC5/PWM_1.c **** *  None
 194:Generated_Source\PSoC5/PWM_1.c **** *
 195:Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_1.c **** *
 198:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:Generated_Source\PSoC5/PWM_1.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_1.c **** 
 207:Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 70640040 		.word	1073767536
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_1_Enable, .-PWM_1_Enable
  46              		.section	.text.PWM_1_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM_1_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_1_Stop, %function
  52              	PWM_1_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_1.c **** }
 212:Generated_Source\PSoC5/PWM_1.c **** 
 213:Generated_Source\PSoC5/PWM_1.c **** 
 214:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_1.c **** *
 218:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_1.c **** *
 222:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_1.c **** *  None
 224:Generated_Source\PSoC5/PWM_1.c **** *
 225:Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:Generated_Source\PSoC5/PWM_1.c **** *  None
 227:Generated_Source\PSoC5/PWM_1.c **** *
 228:Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_1.c **** *
 232:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 6


 233:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
 234:Generated_Source\PSoC5/PWM_1.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 70640040 		.word	1073767536
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_1_Stop, .-PWM_1_Stop
  72              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	PWM_1_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_1_WriteCounter, %function
  78              	PWM_1_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_1.c **** 
 239:Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_1.c **** }
 245:Generated_Source\PSoC5/PWM_1.c **** 
 246:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_1.c **** 
 249:Generated_Source\PSoC5/PWM_1.c **** 
 250:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_1.c ****         *
 254:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_1.c ****         *
 258:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_1.c ****         *
 262:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_1.c ****         *  None
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 7


 264:Generated_Source\PSoC5/PWM_1.c ****         *
 265:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_1.c ****         {
 268:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_1.c **** 
 270:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_1.c **** 
 276:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_1.c **** 
 279:Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:Generated_Source\PSoC5/PWM_1.c **** 
 281:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_1.c ****                 #else
 285:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_1.c **** 
 288:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_1.c **** 
 295:Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_1.c **** 
 300:Generated_Source\PSoC5/PWM_1.c ****             #else
 301:Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_1.c ****         }
 304:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_1.c **** 
 306:Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_1.c **** 
 308:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_1.c **** 
 310:Generated_Source\PSoC5/PWM_1.c **** 
 311:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_1.c ****         *
 315:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_1.c ****         *
 318:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 8


 321:Generated_Source\PSoC5/PWM_1.c ****         *
 322:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:Generated_Source\PSoC5/PWM_1.c ****         *
 325:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_1.c ****         {
 328:Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_1.c ****             #else
 332:Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_1.c **** 
 335:Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:Generated_Source\PSoC5/PWM_1.c ****         }
 340:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_1.c **** 
 342:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_1.c **** 
 344:Generated_Source\PSoC5/PWM_1.c **** 
 345:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_1.c ****     *
 349:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_1.c ****     *
 352:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_1.c ****     *
 356:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:Generated_Source\PSoC5/PWM_1.c ****     *
 359:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_1.c ****     {
 362:Generated_Source\PSoC5/PWM_1.c **** 
 363:Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_1.c ****         #else
 367:Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_1.c **** 
 370:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:Generated_Source\PSoC5/PWM_1.c ****     }
 375:Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_1.c **** 
 377:Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 9


 378:Generated_Source\PSoC5/PWM_1.c **** 
 379:Generated_Source\PSoC5/PWM_1.c **** 
 380:Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_1.c **** 
 382:Generated_Source\PSoC5/PWM_1.c **** 
 383:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_1.c ****     *
 387:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_1.c ****     *
 393:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_1.c ****     *
 396:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:Generated_Source\PSoC5/PWM_1.c ****     *
 399:Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_1.c ****     *
 402:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_1.c ****                                        
 405:Generated_Source\PSoC5/PWM_1.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 00640040 		.word	1073767424
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  97              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_1_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_1_ReadCounter, %function
 103              	PWM_1_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_1.c ****     }
 408:Generated_Source\PSoC5/PWM_1.c **** 
 409:Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 10


 410:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_1.c ****     *
 414:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_1.c ****     *
 418:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:Generated_Source\PSoC5/PWM_1.c ****     *
 421:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_1.c ****     *
 424:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_1.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_1.c **** 
 432:Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM_1.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 10640040 		.word	1073767440
 122 0010 50640040 		.word	1073767504
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 126              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM_1_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_1_WritePeriod, %function
 132              	PWM_1_WritePeriod:
 133              	.LFB7:
 435:Generated_Source\PSoC5/PWM_1.c **** 
 436:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 11


 438:Generated_Source\PSoC5/PWM_1.c **** 
 439:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_1.c ****         *
 443:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_1.c ****         *
 446:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:Generated_Source\PSoC5/PWM_1.c ****         *
 449:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:Generated_Source\PSoC5/PWM_1.c ****         *
 452:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_1.c ****         {
 455:Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_1.c ****             {
 457:Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:Generated_Source\PSoC5/PWM_1.c ****             }
 459:Generated_Source\PSoC5/PWM_1.c ****         }
 460:Generated_Source\PSoC5/PWM_1.c **** 
 461:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:Generated_Source\PSoC5/PWM_1.c **** 
 463:Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_1.c **** 
 465:Generated_Source\PSoC5/PWM_1.c **** 
 466:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_1.c **** *
 470:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_1.c **** *
 474:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_1.c **** *
 478:Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:Generated_Source\PSoC5/PWM_1.c **** *  None
 480:Generated_Source\PSoC5/PWM_1.c **** *
 481:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_1.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_1.c ****     #else
 487:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 40640040 		.word	1073767488
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 151              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_1_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_1_WriteCompare, %function
 157              	PWM_1_WriteCompare:
 158              	.LFB8:
 488:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_1.c **** }
 490:Generated_Source\PSoC5/PWM_1.c **** 
 491:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_1.c **** 
 493:Generated_Source\PSoC5/PWM_1.c **** 
 494:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_1.c ****     *
 498:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_1.c ****     *
 505:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_1.c ****     *
 508:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:Generated_Source\PSoC5/PWM_1.c ****     *
 511:Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_1.c ****     *
 515:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_1.c ****                                        
 518:Generated_Source\PSoC5/PWM_1.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 13


 521:Generated_Source\PSoC5/PWM_1.c ****         #else
 522:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 20640040 		.word	1073767456
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 176              		.section	.text.PWM_1_WriteDeadTime,"ax",%progbits
 177              		.align	2
 178              		.global	PWM_1_WriteDeadTime
 179              		.thumb
 180              		.thumb_func
 181              		.type	PWM_1_WriteDeadTime, %function
 182              	PWM_1_WriteDeadTime:
 183              	.LFB9:
 523:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_1.c **** 
 525:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_1.c ****             #else
 529:Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_1.c ****     }
 533:Generated_Source\PSoC5/PWM_1.c **** 
 534:Generated_Source\PSoC5/PWM_1.c **** 
 535:Generated_Source\PSoC5/PWM_1.c **** #else
 536:Generated_Source\PSoC5/PWM_1.c **** 
 537:Generated_Source\PSoC5/PWM_1.c **** 
 538:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_1.c ****     *
 542:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_1.c ****     *
 548:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_1.c ****     *
 551:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:Generated_Source\PSoC5/PWM_1.c ****     *
 554:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_1.c ****                                         
 557:Generated_Source\PSoC5/PWM_1.c ****     {
 558:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 14


 559:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_1.c ****         #else
 561:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_1.c ****     }
 564:Generated_Source\PSoC5/PWM_1.c **** 
 565:Generated_Source\PSoC5/PWM_1.c **** 
 566:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_1.c ****     *
 570:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_1.c ****     *
 577:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_1.c ****     *
 580:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:Generated_Source\PSoC5/PWM_1.c ****     *
 583:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_1.c ****                                         
 586:Generated_Source\PSoC5/PWM_1.c ****     {
 587:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_1.c ****         #else
 590:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_1.c ****     }
 593:Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_1.c **** 
 595:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_1.c **** 
 597:Generated_Source\PSoC5/PWM_1.c **** 
 598:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_1.c ****     *
 602:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_1.c ****     *
 605:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_1.c ****     *
 608:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:Generated_Source\PSoC5/PWM_1.c ****     *
 611:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_1.c ****     {
 184              		.loc 1 613 0
 185              		.cfi_startproc
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 15


 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 614:Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_1.c ****         #else
 618:Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 190              		.loc 1 620 0
 191 0000 054B     		ldr	r3, .L20
 192 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 193 0004 02F0FC02 		and	r2, r2, #252
 194 0008 1A70     		strb	r2, [r3]
 621:Generated_Source\PSoC5/PWM_1.c **** 
 622:Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_1.c ****             #else
 627:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 195              		.loc 1 627 0
 196 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 197 000c 00F00300 		and	r0, r0, #3
 198              	.LVL4:
 199 0010 1043     		orrs	r0, r0, r2
 200 0012 1870     		strb	r0, [r3]
 201 0014 7047     		bx	lr
 202              	.L21:
 203 0016 00BF     		.align	2
 204              	.L20:
 205 0018 71640040 		.word	1073767537
 206              		.cfi_endproc
 207              	.LFE9:
 208              		.size	PWM_1_WriteDeadTime, .-PWM_1_WriteDeadTime
 209              		.section	.text.PWM_1_ReadDeadTime,"ax",%progbits
 210              		.align	2
 211              		.global	PWM_1_ReadDeadTime
 212              		.thumb
 213              		.thumb_func
 214              		.type	PWM_1_ReadDeadTime, %function
 215              	PWM_1_ReadDeadTime:
 216              	.LFB10:
 628:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_1.c **** 
 630:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_1.c ****     }
 632:Generated_Source\PSoC5/PWM_1.c **** 
 633:Generated_Source\PSoC5/PWM_1.c **** 
 634:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_1.c ****     *
 638:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 16


 640:Generated_Source\PSoC5/PWM_1.c ****     *
 641:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:Generated_Source\PSoC5/PWM_1.c ****     *
 644:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_1.c ****     *
 647:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_1.c ****     {
 217              		.loc 1 649 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 650:Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_1.c ****         #else
 654:Generated_Source\PSoC5/PWM_1.c **** 
 655:Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_1.c ****             #else
 660:Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 222              		.loc 1 660 0
 223 0000 024B     		ldr	r3, .L23
 224 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 661:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_1.c ****     }
 225              		.loc 1 663 0
 226 0004 00F00300 		and	r0, r0, #3
 227 0008 7047     		bx	lr
 228              	.L24:
 229 000a 00BF     		.align	2
 230              	.L23:
 231 000c 71640040 		.word	1073767537
 232              		.cfi_endproc
 233              	.LFE10:
 234              		.size	PWM_1_ReadDeadTime, .-PWM_1_ReadDeadTime
 235              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 236              		.align	2
 237              		.global	PWM_1_SetInterruptMode
 238              		.thumb
 239              		.thumb_func
 240              		.type	PWM_1_SetInterruptMode, %function
 241              	PWM_1_SetInterruptMode:
 242              	.LFB11:
 664:Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_1.c **** 
 666:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_1.c **** 
 668:Generated_Source\PSoC5/PWM_1.c **** 
 669:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 17


 671:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_1.c ****     *
 673:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_1.c ****     *
 677:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_1.c ****     *
 680:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:Generated_Source\PSoC5/PWM_1.c ****     *
 683:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_1.c ****     {
 243              		.loc 1 685 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248              	.LVL5:
 686:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 249              		.loc 1 686 0
 250 0000 014B     		ldr	r3, .L26
 251 0002 1870     		strb	r0, [r3]
 252 0004 7047     		bx	lr
 253              	.L27:
 254 0006 00BF     		.align	2
 255              	.L26:
 256 0008 80640040 		.word	1073767552
 257              		.cfi_endproc
 258              	.LFE11:
 259              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 260              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_1_ReadStatusRegister
 263              		.thumb
 264              		.thumb_func
 265              		.type	PWM_1_ReadStatusRegister, %function
 266              	PWM_1_ReadStatusRegister:
 267              	.LFB12:
 687:Generated_Source\PSoC5/PWM_1.c ****     }
 688:Generated_Source\PSoC5/PWM_1.c **** 
 689:Generated_Source\PSoC5/PWM_1.c **** 
 690:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_1.c ****     *
 694:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_1.c ****     *
 697:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:Generated_Source\PSoC5/PWM_1.c ****     *
 700:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 18


 703:Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_1.c ****     *
 710:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_1.c ****     {
 268              		.loc 1 712 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 273              		.loc 1 713 0
 274 0000 014B     		ldr	r3, .L29
 275 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_1.c ****     }
 276              		.loc 1 714 0
 277 0004 7047     		bx	lr
 278              	.L30:
 279 0006 00BF     		.align	2
 280              	.L29:
 281 0008 60640040 		.word	1073767520
 282              		.cfi_endproc
 283              	.LFE12:
 284              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 285              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 286              		.align	2
 287              		.global	PWM_1_ReadControlRegister
 288              		.thumb
 289              		.thumb_func
 290              		.type	PWM_1_ReadControlRegister, %function
 291              	PWM_1_ReadControlRegister:
 292              	.LFB13:
 715:Generated_Source\PSoC5/PWM_1.c **** 
 716:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_1.c **** 
 718:Generated_Source\PSoC5/PWM_1.c **** 
 719:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:Generated_Source\PSoC5/PWM_1.c **** 
 721:Generated_Source\PSoC5/PWM_1.c **** 
 722:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_1.c ****     *
 726:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_1.c ****     *
 730:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:Generated_Source\PSoC5/PWM_1.c ****     *
 733:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 19


 735:Generated_Source\PSoC5/PWM_1.c ****     *
 736:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_1.c ****     {
 293              		.loc 1 738 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_1.c **** 
 741:Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 298              		.loc 1 741 0
 299 0000 014B     		ldr	r3, .L32
 300 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 301              	.LVL6:
 742:Generated_Source\PSoC5/PWM_1.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_1.c ****     }
 302              		.loc 1 743 0
 303 0004 7047     		bx	lr
 304              	.L33:
 305 0006 00BF     		.align	2
 306              	.L32:
 307 0008 70640040 		.word	1073767536
 308              		.cfi_endproc
 309              	.LFE13:
 310              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 311              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 312              		.align	2
 313              		.global	PWM_1_WriteControlRegister
 314              		.thumb
 315              		.thumb_func
 316              		.type	PWM_1_WriteControlRegister, %function
 317              	PWM_1_WriteControlRegister:
 318              	.LFB14:
 744:Generated_Source\PSoC5/PWM_1.c **** 
 745:Generated_Source\PSoC5/PWM_1.c **** 
 746:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_1.c ****     *
 750:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_1.c ****     *
 754:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_1.c ****     *
 761:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:Generated_Source\PSoC5/PWM_1.c ****     *
 764:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 20


 766:Generated_Source\PSoC5/PWM_1.c ****     {
 319              		.loc 1 766 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324              	.LVL7:
 767:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 325              		.loc 1 767 0
 326 0000 014B     		ldr	r3, .L35
 327 0002 1870     		strb	r0, [r3]
 328 0004 7047     		bx	lr
 329              	.L36:
 330 0006 00BF     		.align	2
 331              	.L35:
 332 0008 70640040 		.word	1073767536
 333              		.cfi_endproc
 334              	.LFE14:
 335              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 336              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 337              		.align	2
 338              		.global	PWM_1_ReadCapture
 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM_1_ReadCapture, %function
 342              	PWM_1_ReadCapture:
 343              	.LFB15:
 768:Generated_Source\PSoC5/PWM_1.c ****     }
 769:Generated_Source\PSoC5/PWM_1.c **** 
 770:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:Generated_Source\PSoC5/PWM_1.c **** 
 772:Generated_Source\PSoC5/PWM_1.c **** 
 773:Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_1.c **** 
 775:Generated_Source\PSoC5/PWM_1.c **** 
 776:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_1.c ****     *
 780:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_1.c ****     *
 783:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:Generated_Source\PSoC5/PWM_1.c ****     *
 786:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_1.c ****     *
 789:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_1.c ****     {
 344              		.loc 1 791 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 21


 349              		.loc 1 792 0
 350 0000 014B     		ldr	r3, .L38
 351 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM_1.c ****     }
 352              		.loc 1 793 0
 353 0004 7047     		bx	lr
 354              	.L39:
 355 0006 00BF     		.align	2
 356              	.L38:
 357 0008 50640040 		.word	1073767504
 358              		.cfi_endproc
 359              	.LFE15:
 360              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 361              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 362              		.align	2
 363              		.global	PWM_1_ClearFIFO
 364              		.thumb
 365              		.thumb_func
 366              		.type	PWM_1_ClearFIFO, %function
 367              	PWM_1_ClearFIFO:
 368              	.LFB6:
 454:Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 369              		.loc 1 454 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 08B5     		push	{r3, lr}
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/PWM_1.c ****             {
 377              		.loc 1 455 0
 378 0002 01E0     		b	.L41
 379              	.L42:
 457:Generated_Source\PSoC5/PWM_1.c ****             }
 380              		.loc 1 457 0
 381 0004 FFF7FEFF 		bl	PWM_1_ReadCapture
 382              	.LVL8:
 383              	.L41:
 455:Generated_Source\PSoC5/PWM_1.c ****             {
 384              		.loc 1 455 0
 385 0008 FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 386              	.LVL9:
 387 000c 10F0100F 		tst	r0, #16
 388 0010 F8D1     		bne	.L42
 459:Generated_Source\PSoC5/PWM_1.c **** 
 389              		.loc 1 459 0
 390 0012 08BD     		pop	{r3, pc}
 391              		.cfi_endproc
 392              	.LFE6:
 393              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 394              		.section	.text.PWM_1_Init,"ax",%progbits
 395              		.align	2
 396              		.global	PWM_1_Init
 397              		.thumb
 398              		.thumb_func
 399              		.type	PWM_1_Init, %function
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 22


 400              	PWM_1_Init:
 401              	.LFB1:
  85:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
 402              		.loc 1 85 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406 0000 10B5     		push	{r4, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 410              		.loc 1 117 0
 411 0002 134A     		ldr	r2, .L46
 412 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 413 0006 03F0C003 		and	r3, r3, #192
 414              	.LVL10:
 119:Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 415              		.loc 1 119 0
 416 000a 43F00903 		orr	r3, r3, #9
 417              	.LVL11:
 418 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 419              		.loc 1 126 0
 420 0010 104C     		ldr	r4, .L46+4
 421 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 422 0014 43F00103 		orr	r3, r3, #1
 423 0018 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 424              		.loc 1 133 0
 425 001a FF20     		movs	r0, #255
 426 001c FFF7FEFF 		bl	PWM_1_WriteCounter
 427              	.LVL12:
 136:Generated_Source\PSoC5/PWM_1.c **** 
 428              		.loc 1 136 0
 429 0020 FF20     		movs	r0, #255
 430 0022 FFF7FEFF 		bl	PWM_1_WritePeriod
 431              	.LVL13:
 139:Generated_Source\PSoC5/PWM_1.c ****         #else
 432              		.loc 1 139 0
 433 0026 3220     		movs	r0, #50
 434 0028 FFF7FEFF 		bl	PWM_1_WriteCompare
 435              	.LVL14:
 150:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 436              		.loc 1 150 0
 437 002c 0120     		movs	r0, #1
 438 002e FFF7FEFF 		bl	PWM_1_WriteDeadTime
 439              	.LVL15:
 154:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 440              		.loc 1 154 0
 441 0032 0020     		movs	r0, #0
 442 0034 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 443              	.LVL16:
 167:Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 444              		.loc 1 167 0
 445 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 446              	.LVL17:
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 23


 169:Generated_Source\PSoC5/PWM_1.c **** 
 447              		.loc 1 169 0
 448 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 449 003e 43F01003 		orr	r3, r3, #16
 450 0042 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/PWM_1.c **** 
 451              		.loc 1 172 0
 452 0044 FFF7FEFF 		bl	CyExitCriticalSection
 453              	.LVL18:
 176:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 454              		.loc 1 176 0
 455 0048 FFF7FEFF 		bl	PWM_1_ClearFIFO
 456              	.LVL19:
 457 004c 10BD     		pop	{r4, pc}
 458              	.L47:
 459 004e 00BF     		.align	2
 460              	.L46:
 461 0050 70640040 		.word	1073767536
 462 0054 90640040 		.word	1073767568
 463              		.cfi_endproc
 464              	.LFE1:
 465              		.size	PWM_1_Init, .-PWM_1_Init
 466              		.section	.text.PWM_1_Start,"ax",%progbits
 467              		.align	2
 468              		.global	PWM_1_Start
 469              		.thumb
 470              		.thumb_func
 471              		.type	PWM_1_Start, %function
 472              	PWM_1_Start:
 473              	.LFB0:
  56:Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
 474              		.loc 1 56 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_1.c ****     {
 482              		.loc 1 58 0
 483 0002 054B     		ldr	r3, .L51
 484 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0006 23B9     		cbnz	r3, .L49
  60:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
 486              		.loc 1 60 0
 487 0008 FFF7FEFF 		bl	PWM_1_Init
 488              	.LVL20:
  61:Generated_Source\PSoC5/PWM_1.c ****     }
 489              		.loc 1 61 0
 490 000c 0122     		movs	r2, #1
 491 000e 024B     		ldr	r3, .L51
 492 0010 1A70     		strb	r2, [r3]
 493              	.L49:
  63:Generated_Source\PSoC5/PWM_1.c **** 
 494              		.loc 1 63 0
 495 0012 FFF7FEFF 		bl	PWM_1_Enable
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 24


 496              	.LVL21:
 497 0016 08BD     		pop	{r3, pc}
 498              	.L52:
 499              		.align	2
 500              	.L51:
 501 0018 00000000 		.word	.LANCHOR0
 502              		.cfi_endproc
 503              	.LFE0:
 504              		.size	PWM_1_Start, .-PWM_1_Start
 505              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 506              		.align	2
 507              		.global	PWM_1_ReadCompare
 508              		.thumb
 509              		.thumb_func
 510              		.type	PWM_1_ReadCompare, %function
 511              	PWM_1_ReadCompare:
 512              	.LFB16:
 794:Generated_Source\PSoC5/PWM_1.c **** 
 795:Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_1.c **** 
 797:Generated_Source\PSoC5/PWM_1.c **** 
 798:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_1.c **** 
 800:Generated_Source\PSoC5/PWM_1.c **** 
 801:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_1.c ****     *
 805:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_1.c ****     *
 809:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:Generated_Source\PSoC5/PWM_1.c ****     *
 812:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_1.c ****     *
 815:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_1.c ****     {
 513              		.loc 1 817 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 818:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_1.c ****         #else
 821:Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 518              		.loc 1 821 0
 519 0000 014B     		ldr	r3, .L54
 520 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_1.c ****     }
 521              		.loc 1 823 0
 522 0004 7047     		bx	lr
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 25


 523              	.L55:
 524 0006 00BF     		.align	2
 525              	.L54:
 526 0008 20640040 		.word	1073767456
 527              		.cfi_endproc
 528              	.LFE16:
 529              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 530              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 531              		.align	2
 532              		.global	PWM_1_ReadPeriod
 533              		.thumb
 534              		.thumb_func
 535              		.type	PWM_1_ReadPeriod, %function
 536              	PWM_1_ReadPeriod:
 537              	.LFB17:
 824:Generated_Source\PSoC5/PWM_1.c **** 
 825:Generated_Source\PSoC5/PWM_1.c **** #else
 826:Generated_Source\PSoC5/PWM_1.c **** 
 827:Generated_Source\PSoC5/PWM_1.c **** 
 828:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_1.c ****     *
 832:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_1.c ****     *
 835:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:Generated_Source\PSoC5/PWM_1.c ****     *
 838:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_1.c ****     *
 841:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_1.c ****     {
 844:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_1.c ****     }
 846:Generated_Source\PSoC5/PWM_1.c **** 
 847:Generated_Source\PSoC5/PWM_1.c **** 
 848:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_1.c ****     *
 852:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_1.c ****     *
 855:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:Generated_Source\PSoC5/PWM_1.c ****     *
 858:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_1.c ****     *
 861:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_1.c ****     {
 864:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_1.c ****     }
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 26


 866:Generated_Source\PSoC5/PWM_1.c **** 
 867:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_1.c **** 
 869:Generated_Source\PSoC5/PWM_1.c **** 
 870:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_1.c **** *
 874:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_1.c **** *
 877:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_1.c **** *  None
 879:Generated_Source\PSoC5/PWM_1.c **** *
 880:Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_1.c **** *
 883:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_1.c **** {
 538              		.loc 1 885 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_1.c ****     #else
 889:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 543              		.loc 1 889 0
 544 0000 014B     		ldr	r3, .L57
 545 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_1.c **** }
 546              		.loc 1 891 0
 547 0004 7047     		bx	lr
 548              	.L58:
 549 0006 00BF     		.align	2
 550              	.L57:
 551 0008 40640040 		.word	1073767488
 552              		.cfi_endproc
 553              	.LFE17:
 554              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 555              		.global	PWM_1_initVar
 556              		.bss
 557              		.set	.LANCHOR0,. + 0
 558              		.type	PWM_1_initVar, %object
 559              		.size	PWM_1_initVar, 1
 560              	PWM_1_initVar:
 561 0000 00       		.space	1
 562              		.text
 563              	.Letext0:
 564              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 565              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 566              		.section	.debug_info,"",%progbits
 567              	.Ldebug_info0:
 568 0000 80030000 		.4byte	0x380
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 27


 569 0004 0400     		.2byte	0x4
 570 0006 00000000 		.4byte	.Ldebug_abbrev0
 571 000a 04       		.byte	0x4
 572 000b 01       		.uleb128 0x1
 573 000c D6000000 		.4byte	.LASF44
 574 0010 0C       		.byte	0xc
 575 0011 77020000 		.4byte	.LASF45
 576 0015 9C000000 		.4byte	.LASF46
 577 0019 00000000 		.4byte	.Ldebug_ranges0+0
 578 001d 00000000 		.4byte	0
 579 0021 00000000 		.4byte	.Ldebug_line0
 580 0025 02       		.uleb128 0x2
 581 0026 01       		.byte	0x1
 582 0027 06       		.byte	0x6
 583 0028 50030000 		.4byte	.LASF0
 584 002c 02       		.uleb128 0x2
 585 002d 01       		.byte	0x1
 586 002e 08       		.byte	0x8
 587 002f 9A010000 		.4byte	.LASF1
 588 0033 02       		.uleb128 0x2
 589 0034 02       		.byte	0x2
 590 0035 05       		.byte	0x5
 591 0036 FB010000 		.4byte	.LASF2
 592 003a 02       		.uleb128 0x2
 593 003b 02       		.byte	0x2
 594 003c 07       		.byte	0x7
 595 003d 3D000000 		.4byte	.LASF3
 596 0041 02       		.uleb128 0x2
 597 0042 04       		.byte	0x4
 598 0043 05       		.byte	0x5
 599 0044 36030000 		.4byte	.LASF4
 600 0048 02       		.uleb128 0x2
 601 0049 04       		.byte	0x4
 602 004a 07       		.byte	0x7
 603 004b 7A010000 		.4byte	.LASF5
 604 004f 02       		.uleb128 0x2
 605 0050 08       		.byte	0x8
 606 0051 05       		.byte	0x5
 607 0052 BE020000 		.4byte	.LASF6
 608 0056 02       		.uleb128 0x2
 609 0057 08       		.byte	0x8
 610 0058 07       		.byte	0x7
 611 0059 85000000 		.4byte	.LASF7
 612 005d 03       		.uleb128 0x3
 613 005e 04       		.byte	0x4
 614 005f 05       		.byte	0x5
 615 0060 696E7400 		.ascii	"int\000"
 616 0064 02       		.uleb128 0x2
 617 0065 04       		.byte	0x4
 618 0066 07       		.byte	0x7
 619 0067 54020000 		.4byte	.LASF8
 620 006b 04       		.uleb128 0x4
 621 006c 8C010000 		.4byte	.LASF12
 622 0070 02       		.byte	0x2
 623 0071 9201     		.2byte	0x192
 624 0073 2C000000 		.4byte	0x2c
 625 0077 02       		.uleb128 0x2
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 28


 626 0078 04       		.byte	0x4
 627 0079 04       		.byte	0x4
 628 007a 20000000 		.4byte	.LASF9
 629 007e 02       		.uleb128 0x2
 630 007f 08       		.byte	0x8
 631 0080 04       		.byte	0x4
 632 0081 D1010000 		.4byte	.LASF10
 633 0085 02       		.uleb128 0x2
 634 0086 01       		.byte	0x1
 635 0087 08       		.byte	0x8
 636 0088 3F030000 		.4byte	.LASF11
 637 008c 04       		.uleb128 0x4
 638 008d 64010000 		.4byte	.LASF13
 639 0091 02       		.byte	0x2
 640 0092 3C02     		.2byte	0x23c
 641 0094 98000000 		.4byte	0x98
 642 0098 05       		.uleb128 0x5
 643 0099 6B000000 		.4byte	0x6b
 644 009d 02       		.uleb128 0x2
 645 009e 08       		.byte	0x8
 646 009f 04       		.byte	0x4
 647 00a0 44030000 		.4byte	.LASF14
 648 00a4 02       		.uleb128 0x2
 649 00a5 04       		.byte	0x4
 650 00a6 07       		.byte	0x7
 651 00a7 A2020000 		.4byte	.LASF15
 652 00ab 06       		.uleb128 0x6
 653 00ac 00000000 		.4byte	.LASF16
 654 00b0 01       		.byte	0x1
 655 00b1 C7       		.byte	0xc7
 656 00b2 00000000 		.4byte	.LFB2
 657 00b6 10000000 		.4byte	.LFE2-.LFB2
 658 00ba 01       		.uleb128 0x1
 659 00bb 9C       		.byte	0x9c
 660 00bc 06       		.uleb128 0x6
 661 00bd 2B030000 		.4byte	.LASF17
 662 00c1 01       		.byte	0x1
 663 00c2 E9       		.byte	0xe9
 664 00c3 00000000 		.4byte	.LFB3
 665 00c7 10000000 		.4byte	.LFE3-.LFB3
 666 00cb 01       		.uleb128 0x1
 667 00cc 9C       		.byte	0x9c
 668 00cd 07       		.uleb128 0x7
 669 00ce 0D000000 		.4byte	.LASF18
 670 00d2 01       		.byte	0x1
 671 00d3 9301     		.2byte	0x193
 672 00d5 00000000 		.4byte	.LFB4
 673 00d9 0C000000 		.4byte	.LFE4-.LFB4
 674 00dd 01       		.uleb128 0x1
 675 00de 9C       		.byte	0x9c
 676 00df F2000000 		.4byte	0xf2
 677 00e3 08       		.uleb128 0x8
 678 00e4 7D000000 		.4byte	.LASF20
 679 00e8 01       		.byte	0x1
 680 00e9 9301     		.2byte	0x193
 681 00eb 6B000000 		.4byte	0x6b
 682 00ef 01       		.uleb128 0x1
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 29


 683 00f0 50       		.byte	0x50
 684 00f1 00       		.byte	0
 685 00f2 09       		.uleb128 0x9
 686 00f3 06030000 		.4byte	.LASF26
 687 00f7 01       		.byte	0x1
 688 00f8 A901     		.2byte	0x1a9
 689 00fa 6B000000 		.4byte	0x6b
 690 00fe 00000000 		.4byte	.LFB5
 691 0102 14000000 		.4byte	.LFE5-.LFB5
 692 0106 01       		.uleb128 0x1
 693 0107 9C       		.byte	0x9c
 694 0108 07       		.uleb128 0x7
 695 0109 F4020000 		.4byte	.LASF19
 696 010d 01       		.byte	0x1
 697 010e E201     		.2byte	0x1e2
 698 0110 00000000 		.4byte	.LFB7
 699 0114 0C000000 		.4byte	.LFE7-.LFB7
 700 0118 01       		.uleb128 0x1
 701 0119 9C       		.byte	0x9c
 702 011a 2D010000 		.4byte	0x12d
 703 011e 08       		.uleb128 0x8
 704 011f 26000000 		.4byte	.LASF21
 705 0123 01       		.byte	0x1
 706 0124 E201     		.2byte	0x1e2
 707 0126 6B000000 		.4byte	0x6b
 708 012a 01       		.uleb128 0x1
 709 012b 50       		.byte	0x50
 710 012c 00       		.byte	0
 711 012d 07       		.uleb128 0x7
 712 012e AB020000 		.4byte	.LASF22
 713 0132 01       		.byte	0x1
 714 0133 0402     		.2byte	0x204
 715 0135 00000000 		.4byte	.LFB8
 716 0139 0C000000 		.4byte	.LFE8-.LFB8
 717 013d 01       		.uleb128 0x1
 718 013e 9C       		.byte	0x9c
 719 013f 52010000 		.4byte	0x152
 720 0143 08       		.uleb128 0x8
 721 0144 5C030000 		.4byte	.LASF23
 722 0148 01       		.byte	0x1
 723 0149 0402     		.2byte	0x204
 724 014b 6B000000 		.4byte	0x6b
 725 014f 01       		.uleb128 0x1
 726 0150 50       		.byte	0x50
 727 0151 00       		.byte	0
 728 0152 07       		.uleb128 0x7
 729 0153 69000000 		.4byte	.LASF24
 730 0157 01       		.byte	0x1
 731 0158 6402     		.2byte	0x264
 732 015a 00000000 		.4byte	.LFB9
 733 015e 1C000000 		.4byte	.LFE9-.LFB9
 734 0162 01       		.uleb128 0x1
 735 0163 9C       		.byte	0x9c
 736 0164 79010000 		.4byte	0x179
 737 0168 0A       		.uleb128 0xa
 738 0169 64030000 		.4byte	.LASF25
 739 016d 01       		.byte	0x1
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 30


 740 016e 6402     		.2byte	0x264
 741 0170 6B000000 		.4byte	0x6b
 742 0174 00000000 		.4byte	.LLST0
 743 0178 00       		.byte	0
 744 0179 09       		.uleb128 0x9
 745 017a 18030000 		.4byte	.LASF27
 746 017e 01       		.byte	0x1
 747 017f 8802     		.2byte	0x288
 748 0181 6B000000 		.4byte	0x6b
 749 0185 00000000 		.4byte	.LFB10
 750 0189 10000000 		.4byte	.LFE10-.LFB10
 751 018d 01       		.uleb128 0x1
 752 018e 9C       		.byte	0x9c
 753 018f 07       		.uleb128 0x7
 754 0190 A8010000 		.4byte	.LASF28
 755 0194 01       		.byte	0x1
 756 0195 AC02     		.2byte	0x2ac
 757 0197 00000000 		.4byte	.LFB11
 758 019b 0C000000 		.4byte	.LFE11-.LFB11
 759 019f 01       		.uleb128 0x1
 760 01a0 9C       		.byte	0x9c
 761 01a1 B4010000 		.4byte	0x1b4
 762 01a5 08       		.uleb128 0x8
 763 01a6 E6020000 		.4byte	.LASF29
 764 01aa 01       		.byte	0x1
 765 01ab AC02     		.2byte	0x2ac
 766 01ad 6B000000 		.4byte	0x6b
 767 01b1 01       		.uleb128 0x1
 768 01b2 50       		.byte	0x50
 769 01b3 00       		.byte	0
 770 01b4 09       		.uleb128 0x9
 771 01b5 50000000 		.4byte	.LASF30
 772 01b9 01       		.byte	0x1
 773 01ba C702     		.2byte	0x2c7
 774 01bc 6B000000 		.4byte	0x6b
 775 01c0 00000000 		.4byte	.LFB12
 776 01c4 0C000000 		.4byte	.LFE12-.LFB12
 777 01c8 01       		.uleb128 0x1
 778 01c9 9C       		.byte	0x9c
 779 01ca 0B       		.uleb128 0xb
 780 01cb CC020000 		.4byte	.LASF47
 781 01cf 01       		.byte	0x1
 782 01d0 E102     		.2byte	0x2e1
 783 01d2 6B000000 		.4byte	0x6b
 784 01d6 00000000 		.4byte	.LFB13
 785 01da 0C000000 		.4byte	.LFE13-.LFB13
 786 01de 01       		.uleb128 0x1
 787 01df 9C       		.byte	0x9c
 788 01e0 F3010000 		.4byte	0x1f3
 789 01e4 0C       		.uleb128 0xc
 790 01e5 96020000 		.4byte	.LASF36
 791 01e9 01       		.byte	0x1
 792 01ea E302     		.2byte	0x2e3
 793 01ec 6B000000 		.4byte	0x6b
 794 01f0 01       		.uleb128 0x1
 795 01f1 50       		.byte	0x50
 796 01f2 00       		.byte	0
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 31


 797 01f3 07       		.uleb128 0x7
 798 01f4 17020000 		.4byte	.LASF31
 799 01f8 01       		.byte	0x1
 800 01f9 FD02     		.2byte	0x2fd
 801 01fb 00000000 		.4byte	.LFB14
 802 01ff 0C000000 		.4byte	.LFE14-.LFB14
 803 0203 01       		.uleb128 0x1
 804 0204 9C       		.byte	0x9c
 805 0205 18020000 		.4byte	0x218
 806 0209 08       		.uleb128 0x8
 807 020a 92010000 		.4byte	.LASF32
 808 020e 01       		.byte	0x1
 809 020f FD02     		.2byte	0x2fd
 810 0211 6B000000 		.4byte	0x6b
 811 0215 01       		.uleb128 0x1
 812 0216 50       		.byte	0x50
 813 0217 00       		.byte	0
 814 0218 09       		.uleb128 0x9
 815 0219 05020000 		.4byte	.LASF33
 816 021d 01       		.byte	0x1
 817 021e 1603     		.2byte	0x316
 818 0220 6B000000 		.4byte	0x6b
 819 0224 00000000 		.4byte	.LFB15
 820 0228 0C000000 		.4byte	.LFE15-.LFB15
 821 022c 01       		.uleb128 0x1
 822 022d 9C       		.byte	0x9c
 823 022e 07       		.uleb128 0x7
 824 022f 2D000000 		.4byte	.LASF34
 825 0233 01       		.byte	0x1
 826 0234 C501     		.2byte	0x1c5
 827 0236 00000000 		.4byte	.LFB6
 828 023a 14000000 		.4byte	.LFE6-.LFB6
 829 023e 01       		.uleb128 0x1
 830 023f 9C       		.byte	0x9c
 831 0240 57020000 		.4byte	0x257
 832 0244 0D       		.uleb128 0xd
 833 0245 08000000 		.4byte	.LVL8
 834 0249 18020000 		.4byte	0x218
 835 024d 0D       		.uleb128 0xd
 836 024e 0C000000 		.4byte	.LVL9
 837 0252 B4010000 		.4byte	0x1b4
 838 0256 00       		.byte	0
 839 0257 0E       		.uleb128 0xe
 840 0258 32020000 		.4byte	.LASF35
 841 025c 01       		.byte	0x1
 842 025d 54       		.byte	0x54
 843 025e 00000000 		.4byte	.LFB1
 844 0262 58000000 		.4byte	.LFE1-.LFB1
 845 0266 01       		.uleb128 0x1
 846 0267 9C       		.byte	0x9c
 847 0268 08030000 		.4byte	0x308
 848 026c 0F       		.uleb128 0xf
 849 026d 9D020000 		.4byte	.LASF37
 850 0271 01       		.byte	0x1
 851 0272 57       		.byte	0x57
 852 0273 6B000000 		.4byte	0x6b
 853 0277 21000000 		.4byte	.LLST1
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 32


 854 027b 0F       		.uleb128 0xf
 855 027c D8010000 		.4byte	.LASF38
 856 0280 01       		.byte	0x1
 857 0281 5D       		.byte	0x5d
 858 0282 6B000000 		.4byte	0x6b
 859 0286 34000000 		.4byte	.LLST2
 860 028a 10       		.uleb128 0x10
 861 028b 20000000 		.4byte	.LVL12
 862 028f CD000000 		.4byte	0xcd
 863 0293 9E020000 		.4byte	0x29e
 864 0297 11       		.uleb128 0x11
 865 0298 01       		.uleb128 0x1
 866 0299 50       		.byte	0x50
 867 029a 02       		.uleb128 0x2
 868 029b 09       		.byte	0x9
 869 029c FF       		.byte	0xff
 870 029d 00       		.byte	0
 871 029e 10       		.uleb128 0x10
 872 029f 26000000 		.4byte	.LVL13
 873 02a3 08010000 		.4byte	0x108
 874 02a7 B2020000 		.4byte	0x2b2
 875 02ab 11       		.uleb128 0x11
 876 02ac 01       		.uleb128 0x1
 877 02ad 50       		.byte	0x50
 878 02ae 02       		.uleb128 0x2
 879 02af 09       		.byte	0x9
 880 02b0 FF       		.byte	0xff
 881 02b1 00       		.byte	0
 882 02b2 10       		.uleb128 0x10
 883 02b3 2C000000 		.4byte	.LVL14
 884 02b7 2D010000 		.4byte	0x12d
 885 02bb C6020000 		.4byte	0x2c6
 886 02bf 11       		.uleb128 0x11
 887 02c0 01       		.uleb128 0x1
 888 02c1 50       		.byte	0x50
 889 02c2 02       		.uleb128 0x2
 890 02c3 08       		.byte	0x8
 891 02c4 32       		.byte	0x32
 892 02c5 00       		.byte	0
 893 02c6 10       		.uleb128 0x10
 894 02c7 32000000 		.4byte	.LVL15
 895 02cb 52010000 		.4byte	0x152
 896 02cf D9020000 		.4byte	0x2d9
 897 02d3 11       		.uleb128 0x11
 898 02d4 01       		.uleb128 0x1
 899 02d5 50       		.byte	0x50
 900 02d6 01       		.uleb128 0x1
 901 02d7 31       		.byte	0x31
 902 02d8 00       		.byte	0
 903 02d9 10       		.uleb128 0x10
 904 02da 38000000 		.4byte	.LVL16
 905 02de 8F010000 		.4byte	0x18f
 906 02e2 EC020000 		.4byte	0x2ec
 907 02e6 11       		.uleb128 0x11
 908 02e7 01       		.uleb128 0x1
 909 02e8 50       		.byte	0x50
 910 02e9 01       		.uleb128 0x1
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 33


 911 02ea 30       		.byte	0x30
 912 02eb 00       		.byte	0
 913 02ec 0D       		.uleb128 0xd
 914 02ed 3C000000 		.4byte	.LVL17
 915 02f1 6D030000 		.4byte	0x36d
 916 02f5 0D       		.uleb128 0xd
 917 02f6 48000000 		.4byte	.LVL18
 918 02fa 78030000 		.4byte	0x378
 919 02fe 0D       		.uleb128 0xd
 920 02ff 4C000000 		.4byte	.LVL19
 921 0303 2E020000 		.4byte	0x22e
 922 0307 00       		.byte	0
 923 0308 0E       		.uleb128 0xe
 924 0309 6D030000 		.4byte	.LASF39
 925 030d 01       		.byte	0x1
 926 030e 37       		.byte	0x37
 927 030f 00000000 		.4byte	.LFB0
 928 0313 1C000000 		.4byte	.LFE0-.LFB0
 929 0317 01       		.uleb128 0x1
 930 0318 9C       		.byte	0x9c
 931 0319 30030000 		.4byte	0x330
 932 031d 0D       		.uleb128 0xd
 933 031e 0C000000 		.4byte	.LVL20
 934 0322 57020000 		.4byte	0x257
 935 0326 0D       		.uleb128 0xd
 936 0327 16000000 		.4byte	.LVL21
 937 032b AB000000 		.4byte	0xab
 938 032f 00       		.byte	0
 939 0330 09       		.uleb128 0x9
 940 0331 BF010000 		.4byte	.LASF40
 941 0335 01       		.byte	0x1
 942 0336 3003     		.2byte	0x330
 943 0338 6B000000 		.4byte	0x6b
 944 033c 00000000 		.4byte	.LFB16
 945 0340 0C000000 		.4byte	.LFE16-.LFB16
 946 0344 01       		.uleb128 0x1
 947 0345 9C       		.byte	0x9c
 948 0346 09       		.uleb128 0x9
 949 0347 69010000 		.4byte	.LASF41
 950 034b 01       		.byte	0x1
 951 034c 7403     		.2byte	0x374
 952 034e 6B000000 		.4byte	0x6b
 953 0352 00000000 		.4byte	.LFB17
 954 0356 0C000000 		.4byte	.LFE17-.LFB17
 955 035a 01       		.uleb128 0x1
 956 035b 9C       		.byte	0x9c
 957 035c 12       		.uleb128 0x12
 958 035d ED010000 		.4byte	.LASF48
 959 0361 01       		.byte	0x1
 960 0362 20       		.byte	0x20
 961 0363 6B000000 		.4byte	0x6b
 962 0367 05       		.uleb128 0x5
 963 0368 03       		.byte	0x3
 964 0369 00000000 		.4byte	PWM_1_initVar
 965 036d 13       		.uleb128 0x13
 966 036e 3D020000 		.4byte	.LASF42
 967 0372 3D020000 		.4byte	.LASF42
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 34


 968 0376 03       		.byte	0x3
 969 0377 7D       		.byte	0x7d
 970 0378 13       		.uleb128 0x13
 971 0379 61020000 		.4byte	.LASF43
 972 037d 61020000 		.4byte	.LASF43
 973 0381 03       		.byte	0x3
 974 0382 7E       		.byte	0x7e
 975 0383 00       		.byte	0
 976              		.section	.debug_abbrev,"",%progbits
 977              	.Ldebug_abbrev0:
 978 0000 01       		.uleb128 0x1
 979 0001 11       		.uleb128 0x11
 980 0002 01       		.byte	0x1
 981 0003 25       		.uleb128 0x25
 982 0004 0E       		.uleb128 0xe
 983 0005 13       		.uleb128 0x13
 984 0006 0B       		.uleb128 0xb
 985 0007 03       		.uleb128 0x3
 986 0008 0E       		.uleb128 0xe
 987 0009 1B       		.uleb128 0x1b
 988 000a 0E       		.uleb128 0xe
 989 000b 55       		.uleb128 0x55
 990 000c 17       		.uleb128 0x17
 991 000d 11       		.uleb128 0x11
 992 000e 01       		.uleb128 0x1
 993 000f 10       		.uleb128 0x10
 994 0010 17       		.uleb128 0x17
 995 0011 00       		.byte	0
 996 0012 00       		.byte	0
 997 0013 02       		.uleb128 0x2
 998 0014 24       		.uleb128 0x24
 999 0015 00       		.byte	0
 1000 0016 0B       		.uleb128 0xb
 1001 0017 0B       		.uleb128 0xb
 1002 0018 3E       		.uleb128 0x3e
 1003 0019 0B       		.uleb128 0xb
 1004 001a 03       		.uleb128 0x3
 1005 001b 0E       		.uleb128 0xe
 1006 001c 00       		.byte	0
 1007 001d 00       		.byte	0
 1008 001e 03       		.uleb128 0x3
 1009 001f 24       		.uleb128 0x24
 1010 0020 00       		.byte	0
 1011 0021 0B       		.uleb128 0xb
 1012 0022 0B       		.uleb128 0xb
 1013 0023 3E       		.uleb128 0x3e
 1014 0024 0B       		.uleb128 0xb
 1015 0025 03       		.uleb128 0x3
 1016 0026 08       		.uleb128 0x8
 1017 0027 00       		.byte	0
 1018 0028 00       		.byte	0
 1019 0029 04       		.uleb128 0x4
 1020 002a 16       		.uleb128 0x16
 1021 002b 00       		.byte	0
 1022 002c 03       		.uleb128 0x3
 1023 002d 0E       		.uleb128 0xe
 1024 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 35


 1025 002f 0B       		.uleb128 0xb
 1026 0030 3B       		.uleb128 0x3b
 1027 0031 05       		.uleb128 0x5
 1028 0032 49       		.uleb128 0x49
 1029 0033 13       		.uleb128 0x13
 1030 0034 00       		.byte	0
 1031 0035 00       		.byte	0
 1032 0036 05       		.uleb128 0x5
 1033 0037 35       		.uleb128 0x35
 1034 0038 00       		.byte	0
 1035 0039 49       		.uleb128 0x49
 1036 003a 13       		.uleb128 0x13
 1037 003b 00       		.byte	0
 1038 003c 00       		.byte	0
 1039 003d 06       		.uleb128 0x6
 1040 003e 2E       		.uleb128 0x2e
 1041 003f 00       		.byte	0
 1042 0040 3F       		.uleb128 0x3f
 1043 0041 19       		.uleb128 0x19
 1044 0042 03       		.uleb128 0x3
 1045 0043 0E       		.uleb128 0xe
 1046 0044 3A       		.uleb128 0x3a
 1047 0045 0B       		.uleb128 0xb
 1048 0046 3B       		.uleb128 0x3b
 1049 0047 0B       		.uleb128 0xb
 1050 0048 27       		.uleb128 0x27
 1051 0049 19       		.uleb128 0x19
 1052 004a 11       		.uleb128 0x11
 1053 004b 01       		.uleb128 0x1
 1054 004c 12       		.uleb128 0x12
 1055 004d 06       		.uleb128 0x6
 1056 004e 40       		.uleb128 0x40
 1057 004f 18       		.uleb128 0x18
 1058 0050 9742     		.uleb128 0x2117
 1059 0052 19       		.uleb128 0x19
 1060 0053 00       		.byte	0
 1061 0054 00       		.byte	0
 1062 0055 07       		.uleb128 0x7
 1063 0056 2E       		.uleb128 0x2e
 1064 0057 01       		.byte	0x1
 1065 0058 3F       		.uleb128 0x3f
 1066 0059 19       		.uleb128 0x19
 1067 005a 03       		.uleb128 0x3
 1068 005b 0E       		.uleb128 0xe
 1069 005c 3A       		.uleb128 0x3a
 1070 005d 0B       		.uleb128 0xb
 1071 005e 3B       		.uleb128 0x3b
 1072 005f 05       		.uleb128 0x5
 1073 0060 27       		.uleb128 0x27
 1074 0061 19       		.uleb128 0x19
 1075 0062 11       		.uleb128 0x11
 1076 0063 01       		.uleb128 0x1
 1077 0064 12       		.uleb128 0x12
 1078 0065 06       		.uleb128 0x6
 1079 0066 40       		.uleb128 0x40
 1080 0067 18       		.uleb128 0x18
 1081 0068 9742     		.uleb128 0x2117
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 36


 1082 006a 19       		.uleb128 0x19
 1083 006b 01       		.uleb128 0x1
 1084 006c 13       		.uleb128 0x13
 1085 006d 00       		.byte	0
 1086 006e 00       		.byte	0
 1087 006f 08       		.uleb128 0x8
 1088 0070 05       		.uleb128 0x5
 1089 0071 00       		.byte	0
 1090 0072 03       		.uleb128 0x3
 1091 0073 0E       		.uleb128 0xe
 1092 0074 3A       		.uleb128 0x3a
 1093 0075 0B       		.uleb128 0xb
 1094 0076 3B       		.uleb128 0x3b
 1095 0077 05       		.uleb128 0x5
 1096 0078 49       		.uleb128 0x49
 1097 0079 13       		.uleb128 0x13
 1098 007a 02       		.uleb128 0x2
 1099 007b 18       		.uleb128 0x18
 1100 007c 00       		.byte	0
 1101 007d 00       		.byte	0
 1102 007e 09       		.uleb128 0x9
 1103 007f 2E       		.uleb128 0x2e
 1104 0080 00       		.byte	0
 1105 0081 3F       		.uleb128 0x3f
 1106 0082 19       		.uleb128 0x19
 1107 0083 03       		.uleb128 0x3
 1108 0084 0E       		.uleb128 0xe
 1109 0085 3A       		.uleb128 0x3a
 1110 0086 0B       		.uleb128 0xb
 1111 0087 3B       		.uleb128 0x3b
 1112 0088 05       		.uleb128 0x5
 1113 0089 27       		.uleb128 0x27
 1114 008a 19       		.uleb128 0x19
 1115 008b 49       		.uleb128 0x49
 1116 008c 13       		.uleb128 0x13
 1117 008d 11       		.uleb128 0x11
 1118 008e 01       		.uleb128 0x1
 1119 008f 12       		.uleb128 0x12
 1120 0090 06       		.uleb128 0x6
 1121 0091 40       		.uleb128 0x40
 1122 0092 18       		.uleb128 0x18
 1123 0093 9742     		.uleb128 0x2117
 1124 0095 19       		.uleb128 0x19
 1125 0096 00       		.byte	0
 1126 0097 00       		.byte	0
 1127 0098 0A       		.uleb128 0xa
 1128 0099 05       		.uleb128 0x5
 1129 009a 00       		.byte	0
 1130 009b 03       		.uleb128 0x3
 1131 009c 0E       		.uleb128 0xe
 1132 009d 3A       		.uleb128 0x3a
 1133 009e 0B       		.uleb128 0xb
 1134 009f 3B       		.uleb128 0x3b
 1135 00a0 05       		.uleb128 0x5
 1136 00a1 49       		.uleb128 0x49
 1137 00a2 13       		.uleb128 0x13
 1138 00a3 02       		.uleb128 0x2
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 37


 1139 00a4 17       		.uleb128 0x17
 1140 00a5 00       		.byte	0
 1141 00a6 00       		.byte	0
 1142 00a7 0B       		.uleb128 0xb
 1143 00a8 2E       		.uleb128 0x2e
 1144 00a9 01       		.byte	0x1
 1145 00aa 3F       		.uleb128 0x3f
 1146 00ab 19       		.uleb128 0x19
 1147 00ac 03       		.uleb128 0x3
 1148 00ad 0E       		.uleb128 0xe
 1149 00ae 3A       		.uleb128 0x3a
 1150 00af 0B       		.uleb128 0xb
 1151 00b0 3B       		.uleb128 0x3b
 1152 00b1 05       		.uleb128 0x5
 1153 00b2 27       		.uleb128 0x27
 1154 00b3 19       		.uleb128 0x19
 1155 00b4 49       		.uleb128 0x49
 1156 00b5 13       		.uleb128 0x13
 1157 00b6 11       		.uleb128 0x11
 1158 00b7 01       		.uleb128 0x1
 1159 00b8 12       		.uleb128 0x12
 1160 00b9 06       		.uleb128 0x6
 1161 00ba 40       		.uleb128 0x40
 1162 00bb 18       		.uleb128 0x18
 1163 00bc 9742     		.uleb128 0x2117
 1164 00be 19       		.uleb128 0x19
 1165 00bf 01       		.uleb128 0x1
 1166 00c0 13       		.uleb128 0x13
 1167 00c1 00       		.byte	0
 1168 00c2 00       		.byte	0
 1169 00c3 0C       		.uleb128 0xc
 1170 00c4 34       		.uleb128 0x34
 1171 00c5 00       		.byte	0
 1172 00c6 03       		.uleb128 0x3
 1173 00c7 0E       		.uleb128 0xe
 1174 00c8 3A       		.uleb128 0x3a
 1175 00c9 0B       		.uleb128 0xb
 1176 00ca 3B       		.uleb128 0x3b
 1177 00cb 05       		.uleb128 0x5
 1178 00cc 49       		.uleb128 0x49
 1179 00cd 13       		.uleb128 0x13
 1180 00ce 02       		.uleb128 0x2
 1181 00cf 18       		.uleb128 0x18
 1182 00d0 00       		.byte	0
 1183 00d1 00       		.byte	0
 1184 00d2 0D       		.uleb128 0xd
 1185 00d3 898201   		.uleb128 0x4109
 1186 00d6 00       		.byte	0
 1187 00d7 11       		.uleb128 0x11
 1188 00d8 01       		.uleb128 0x1
 1189 00d9 31       		.uleb128 0x31
 1190 00da 13       		.uleb128 0x13
 1191 00db 00       		.byte	0
 1192 00dc 00       		.byte	0
 1193 00dd 0E       		.uleb128 0xe
 1194 00de 2E       		.uleb128 0x2e
 1195 00df 01       		.byte	0x1
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 38


 1196 00e0 3F       		.uleb128 0x3f
 1197 00e1 19       		.uleb128 0x19
 1198 00e2 03       		.uleb128 0x3
 1199 00e3 0E       		.uleb128 0xe
 1200 00e4 3A       		.uleb128 0x3a
 1201 00e5 0B       		.uleb128 0xb
 1202 00e6 3B       		.uleb128 0x3b
 1203 00e7 0B       		.uleb128 0xb
 1204 00e8 27       		.uleb128 0x27
 1205 00e9 19       		.uleb128 0x19
 1206 00ea 11       		.uleb128 0x11
 1207 00eb 01       		.uleb128 0x1
 1208 00ec 12       		.uleb128 0x12
 1209 00ed 06       		.uleb128 0x6
 1210 00ee 40       		.uleb128 0x40
 1211 00ef 18       		.uleb128 0x18
 1212 00f0 9742     		.uleb128 0x2117
 1213 00f2 19       		.uleb128 0x19
 1214 00f3 01       		.uleb128 0x1
 1215 00f4 13       		.uleb128 0x13
 1216 00f5 00       		.byte	0
 1217 00f6 00       		.byte	0
 1218 00f7 0F       		.uleb128 0xf
 1219 00f8 34       		.uleb128 0x34
 1220 00f9 00       		.byte	0
 1221 00fa 03       		.uleb128 0x3
 1222 00fb 0E       		.uleb128 0xe
 1223 00fc 3A       		.uleb128 0x3a
 1224 00fd 0B       		.uleb128 0xb
 1225 00fe 3B       		.uleb128 0x3b
 1226 00ff 0B       		.uleb128 0xb
 1227 0100 49       		.uleb128 0x49
 1228 0101 13       		.uleb128 0x13
 1229 0102 02       		.uleb128 0x2
 1230 0103 17       		.uleb128 0x17
 1231 0104 00       		.byte	0
 1232 0105 00       		.byte	0
 1233 0106 10       		.uleb128 0x10
 1234 0107 898201   		.uleb128 0x4109
 1235 010a 01       		.byte	0x1
 1236 010b 11       		.uleb128 0x11
 1237 010c 01       		.uleb128 0x1
 1238 010d 31       		.uleb128 0x31
 1239 010e 13       		.uleb128 0x13
 1240 010f 01       		.uleb128 0x1
 1241 0110 13       		.uleb128 0x13
 1242 0111 00       		.byte	0
 1243 0112 00       		.byte	0
 1244 0113 11       		.uleb128 0x11
 1245 0114 8A8201   		.uleb128 0x410a
 1246 0117 00       		.byte	0
 1247 0118 02       		.uleb128 0x2
 1248 0119 18       		.uleb128 0x18
 1249 011a 9142     		.uleb128 0x2111
 1250 011c 18       		.uleb128 0x18
 1251 011d 00       		.byte	0
 1252 011e 00       		.byte	0
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 39


 1253 011f 12       		.uleb128 0x12
 1254 0120 34       		.uleb128 0x34
 1255 0121 00       		.byte	0
 1256 0122 03       		.uleb128 0x3
 1257 0123 0E       		.uleb128 0xe
 1258 0124 3A       		.uleb128 0x3a
 1259 0125 0B       		.uleb128 0xb
 1260 0126 3B       		.uleb128 0x3b
 1261 0127 0B       		.uleb128 0xb
 1262 0128 49       		.uleb128 0x49
 1263 0129 13       		.uleb128 0x13
 1264 012a 3F       		.uleb128 0x3f
 1265 012b 19       		.uleb128 0x19
 1266 012c 02       		.uleb128 0x2
 1267 012d 18       		.uleb128 0x18
 1268 012e 00       		.byte	0
 1269 012f 00       		.byte	0
 1270 0130 13       		.uleb128 0x13
 1271 0131 2E       		.uleb128 0x2e
 1272 0132 00       		.byte	0
 1273 0133 3F       		.uleb128 0x3f
 1274 0134 19       		.uleb128 0x19
 1275 0135 3C       		.uleb128 0x3c
 1276 0136 19       		.uleb128 0x19
 1277 0137 6E       		.uleb128 0x6e
 1278 0138 0E       		.uleb128 0xe
 1279 0139 03       		.uleb128 0x3
 1280 013a 0E       		.uleb128 0xe
 1281 013b 3A       		.uleb128 0x3a
 1282 013c 0B       		.uleb128 0xb
 1283 013d 3B       		.uleb128 0x3b
 1284 013e 0B       		.uleb128 0xb
 1285 013f 00       		.byte	0
 1286 0140 00       		.byte	0
 1287 0141 00       		.byte	0
 1288              		.section	.debug_loc,"",%progbits
 1289              	.Ldebug_loc0:
 1290              	.LLST0:
 1291 0000 00000000 		.4byte	.LVL3
 1292 0004 10000000 		.4byte	.LVL4
 1293 0008 0100     		.2byte	0x1
 1294 000a 50       		.byte	0x50
 1295 000b 10000000 		.4byte	.LVL4
 1296 000f 1C000000 		.4byte	.LFE9
 1297 0013 0400     		.2byte	0x4
 1298 0015 F3       		.byte	0xf3
 1299 0016 01       		.uleb128 0x1
 1300 0017 50       		.byte	0x50
 1301 0018 9F       		.byte	0x9f
 1302 0019 00000000 		.4byte	0
 1303 001d 00000000 		.4byte	0
 1304              	.LLST1:
 1305 0021 0A000000 		.4byte	.LVL10
 1306 0025 0E000000 		.4byte	.LVL11
 1307 0029 0100     		.2byte	0x1
 1308 002b 53       		.byte	0x53
 1309 002c 00000000 		.4byte	0
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 40


 1310 0030 00000000 		.4byte	0
 1311              	.LLST2:
 1312 0034 3C000000 		.4byte	.LVL17
 1313 0038 47000000 		.4byte	.LVL18-1
 1314 003c 0100     		.2byte	0x1
 1315 003e 50       		.byte	0x50
 1316 003f 00000000 		.4byte	0
 1317 0043 00000000 		.4byte	0
 1318              		.section	.debug_aranges,"",%progbits
 1319 0000 A4000000 		.4byte	0xa4
 1320 0004 0200     		.2byte	0x2
 1321 0006 00000000 		.4byte	.Ldebug_info0
 1322 000a 04       		.byte	0x4
 1323 000b 00       		.byte	0
 1324 000c 0000     		.2byte	0
 1325 000e 0000     		.2byte	0
 1326 0010 00000000 		.4byte	.LFB2
 1327 0014 10000000 		.4byte	.LFE2-.LFB2
 1328 0018 00000000 		.4byte	.LFB3
 1329 001c 10000000 		.4byte	.LFE3-.LFB3
 1330 0020 00000000 		.4byte	.LFB4
 1331 0024 0C000000 		.4byte	.LFE4-.LFB4
 1332 0028 00000000 		.4byte	.LFB5
 1333 002c 14000000 		.4byte	.LFE5-.LFB5
 1334 0030 00000000 		.4byte	.LFB7
 1335 0034 0C000000 		.4byte	.LFE7-.LFB7
 1336 0038 00000000 		.4byte	.LFB8
 1337 003c 0C000000 		.4byte	.LFE8-.LFB8
 1338 0040 00000000 		.4byte	.LFB9
 1339 0044 1C000000 		.4byte	.LFE9-.LFB9
 1340 0048 00000000 		.4byte	.LFB10
 1341 004c 10000000 		.4byte	.LFE10-.LFB10
 1342 0050 00000000 		.4byte	.LFB11
 1343 0054 0C000000 		.4byte	.LFE11-.LFB11
 1344 0058 00000000 		.4byte	.LFB12
 1345 005c 0C000000 		.4byte	.LFE12-.LFB12
 1346 0060 00000000 		.4byte	.LFB13
 1347 0064 0C000000 		.4byte	.LFE13-.LFB13
 1348 0068 00000000 		.4byte	.LFB14
 1349 006c 0C000000 		.4byte	.LFE14-.LFB14
 1350 0070 00000000 		.4byte	.LFB15
 1351 0074 0C000000 		.4byte	.LFE15-.LFB15
 1352 0078 00000000 		.4byte	.LFB6
 1353 007c 14000000 		.4byte	.LFE6-.LFB6
 1354 0080 00000000 		.4byte	.LFB1
 1355 0084 58000000 		.4byte	.LFE1-.LFB1
 1356 0088 00000000 		.4byte	.LFB0
 1357 008c 1C000000 		.4byte	.LFE0-.LFB0
 1358 0090 00000000 		.4byte	.LFB16
 1359 0094 0C000000 		.4byte	.LFE16-.LFB16
 1360 0098 00000000 		.4byte	.LFB17
 1361 009c 0C000000 		.4byte	.LFE17-.LFB17
 1362 00a0 00000000 		.4byte	0
 1363 00a4 00000000 		.4byte	0
 1364              		.section	.debug_ranges,"",%progbits
 1365              	.Ldebug_ranges0:
 1366 0000 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 41


 1367 0004 10000000 		.4byte	.LFE2
 1368 0008 00000000 		.4byte	.LFB3
 1369 000c 10000000 		.4byte	.LFE3
 1370 0010 00000000 		.4byte	.LFB4
 1371 0014 0C000000 		.4byte	.LFE4
 1372 0018 00000000 		.4byte	.LFB5
 1373 001c 14000000 		.4byte	.LFE5
 1374 0020 00000000 		.4byte	.LFB7
 1375 0024 0C000000 		.4byte	.LFE7
 1376 0028 00000000 		.4byte	.LFB8
 1377 002c 0C000000 		.4byte	.LFE8
 1378 0030 00000000 		.4byte	.LFB9
 1379 0034 1C000000 		.4byte	.LFE9
 1380 0038 00000000 		.4byte	.LFB10
 1381 003c 10000000 		.4byte	.LFE10
 1382 0040 00000000 		.4byte	.LFB11
 1383 0044 0C000000 		.4byte	.LFE11
 1384 0048 00000000 		.4byte	.LFB12
 1385 004c 0C000000 		.4byte	.LFE12
 1386 0050 00000000 		.4byte	.LFB13
 1387 0054 0C000000 		.4byte	.LFE13
 1388 0058 00000000 		.4byte	.LFB14
 1389 005c 0C000000 		.4byte	.LFE14
 1390 0060 00000000 		.4byte	.LFB15
 1391 0064 0C000000 		.4byte	.LFE15
 1392 0068 00000000 		.4byte	.LFB6
 1393 006c 14000000 		.4byte	.LFE6
 1394 0070 00000000 		.4byte	.LFB1
 1395 0074 58000000 		.4byte	.LFE1
 1396 0078 00000000 		.4byte	.LFB0
 1397 007c 1C000000 		.4byte	.LFE0
 1398 0080 00000000 		.4byte	.LFB16
 1399 0084 0C000000 		.4byte	.LFE16
 1400 0088 00000000 		.4byte	.LFB17
 1401 008c 0C000000 		.4byte	.LFE17
 1402 0090 00000000 		.4byte	0
 1403 0094 00000000 		.4byte	0
 1404              		.section	.debug_line,"",%progbits
 1405              	.Ldebug_line0:
 1406 0000 A8010000 		.section	.debug_str,"MS",%progbits,1
 1406      02004D00 
 1406      00000201 
 1406      FB0E0D00 
 1406      01010101 
 1407              	.LASF16:
 1408 0000 50574D5F 		.ascii	"PWM_1_Enable\000"
 1408      315F456E 
 1408      61626C65 
 1408      00
 1409              	.LASF18:
 1410 000d 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1410      315F5772 
 1410      69746543 
 1410      6F756E74 
 1410      657200
 1411              	.LASF9:
 1412 0020 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 42


 1412      7400
 1413              	.LASF21:
 1414 0026 70657269 		.ascii	"period\000"
 1414      6F6400
 1415              	.LASF34:
 1416 002d 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1416      315F436C 
 1416      65617246 
 1416      49464F00 
 1417              	.LASF3:
 1418 003d 73686F72 		.ascii	"short unsigned int\000"
 1418      7420756E 
 1418      7369676E 
 1418      65642069 
 1418      6E7400
 1419              	.LASF30:
 1420 0050 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1420      315F5265 
 1420      61645374 
 1420      61747573 
 1420      52656769 
 1421              	.LASF24:
 1422 0069 50574D5F 		.ascii	"PWM_1_WriteDeadTime\000"
 1422      315F5772 
 1422      69746544 
 1422      65616454 
 1422      696D6500 
 1423              	.LASF20:
 1424 007d 636F756E 		.ascii	"counter\000"
 1424      74657200 
 1425              	.LASF7:
 1426 0085 6C6F6E67 		.ascii	"long long unsigned int\000"
 1426      206C6F6E 
 1426      6720756E 
 1426      7369676E 
 1426      65642069 
 1427              	.LASF46:
 1428 009c 433A5C55 		.ascii	"C:\\Users\\kani\\Documents\\PSoC Creator\\moter\\De"
 1428      73657273 
 1428      5C6B616E 
 1428      695C446F 
 1428      63756D65 
 1429 00c9 7369676E 		.ascii	"sign01.cydsn\000"
 1429      30312E63 
 1429      7964736E 
 1429      00
 1430              	.LASF44:
 1431 00d6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1431      43313120 
 1431      352E342E 
 1431      31203230 
 1431      31363036 
 1432 0109 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1432      20726576 
 1432      6973696F 
 1432      6E203233 
 1432      37373135 
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 43


 1433 013c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1433      66756E63 
 1433      74696F6E 
 1433      2D736563 
 1433      74696F6E 
 1434              	.LASF13:
 1435 0164 72656738 		.ascii	"reg8\000"
 1435      00
 1436              	.LASF41:
 1437 0169 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1437      315F5265 
 1437      61645065 
 1437      72696F64 
 1437      00
 1438              	.LASF5:
 1439 017a 6C6F6E67 		.ascii	"long unsigned int\000"
 1439      20756E73 
 1439      69676E65 
 1439      6420696E 
 1439      7400
 1440              	.LASF12:
 1441 018c 75696E74 		.ascii	"uint8\000"
 1441      3800
 1442              	.LASF32:
 1443 0192 636F6E74 		.ascii	"control\000"
 1443      726F6C00 
 1444              	.LASF1:
 1445 019a 756E7369 		.ascii	"unsigned char\000"
 1445      676E6564 
 1445      20636861 
 1445      7200
 1446              	.LASF28:
 1447 01a8 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1447      315F5365 
 1447      74496E74 
 1447      65727275 
 1447      70744D6F 
 1448              	.LASF40:
 1449 01bf 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1449      315F5265 
 1449      6164436F 
 1449      6D706172 
 1449      6500
 1450              	.LASF10:
 1451 01d1 646F7562 		.ascii	"double\000"
 1451      6C6500
 1452              	.LASF38:
 1453 01d8 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1453      315F696E 
 1453      74657272 
 1453      75707453 
 1453      74617465 
 1454              	.LASF48:
 1455 01ed 50574D5F 		.ascii	"PWM_1_initVar\000"
 1455      315F696E 
 1455      69745661 
 1455      7200
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 44


 1456              	.LASF2:
 1457 01fb 73686F72 		.ascii	"short int\000"
 1457      7420696E 
 1457      7400
 1458              	.LASF33:
 1459 0205 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1459      315F5265 
 1459      61644361 
 1459      70747572 
 1459      6500
 1460              	.LASF31:
 1461 0217 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1461      315F5772 
 1461      69746543 
 1461      6F6E7472 
 1461      6F6C5265 
 1462              	.LASF35:
 1463 0232 50574D5F 		.ascii	"PWM_1_Init\000"
 1463      315F496E 
 1463      697400
 1464              	.LASF42:
 1465 023d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1465      74657243 
 1465      72697469 
 1465      63616C53 
 1465      65637469 
 1466              	.LASF8:
 1467 0254 756E7369 		.ascii	"unsigned int\000"
 1467      676E6564 
 1467      20696E74 
 1467      00
 1468              	.LASF43:
 1469 0261 43794578 		.ascii	"CyExitCriticalSection\000"
 1469      69744372 
 1469      69746963 
 1469      616C5365 
 1469      6374696F 
 1470              	.LASF45:
 1471 0277 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_1.c\000"
 1471      72617465 
 1471      645F536F 
 1471      75726365 
 1471      5C50536F 
 1472              	.LASF36:
 1473 0296 72657375 		.ascii	"result\000"
 1473      6C7400
 1474              	.LASF37:
 1475 029d 6374726C 		.ascii	"ctrl\000"
 1475      00
 1476              	.LASF15:
 1477 02a2 73697A65 		.ascii	"sizetype\000"
 1477      74797065 
 1477      00
 1478              	.LASF22:
 1479 02ab 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1479      315F5772 
 1479      69746543 
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 45


 1479      6F6D7061 
 1479      726500
 1480              	.LASF6:
 1481 02be 6C6F6E67 		.ascii	"long long int\000"
 1481      206C6F6E 
 1481      6720696E 
 1481      7400
 1482              	.LASF47:
 1483 02cc 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1483      315F5265 
 1483      6164436F 
 1483      6E74726F 
 1483      6C526567 
 1484              	.LASF29:
 1485 02e6 696E7465 		.ascii	"interruptMode\000"
 1485      72727570 
 1485      744D6F64 
 1485      6500
 1486              	.LASF19:
 1487 02f4 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1487      315F5772 
 1487      69746550 
 1487      6572696F 
 1487      6400
 1488              	.LASF26:
 1489 0306 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1489      315F5265 
 1489      6164436F 
 1489      756E7465 
 1489      7200
 1490              	.LASF27:
 1491 0318 50574D5F 		.ascii	"PWM_1_ReadDeadTime\000"
 1491      315F5265 
 1491      61644465 
 1491      61645469 
 1491      6D6500
 1492              	.LASF17:
 1493 032b 50574D5F 		.ascii	"PWM_1_Stop\000"
 1493      315F5374 
 1493      6F7000
 1494              	.LASF4:
 1495 0336 6C6F6E67 		.ascii	"long int\000"
 1495      20696E74 
 1495      00
 1496              	.LASF11:
 1497 033f 63686172 		.ascii	"char\000"
 1497      00
 1498              	.LASF14:
 1499 0344 6C6F6E67 		.ascii	"long double\000"
 1499      20646F75 
 1499      626C6500 
 1500              	.LASF0:
 1501 0350 7369676E 		.ascii	"signed char\000"
 1501      65642063 
 1501      68617200 
 1502              	.LASF23:
 1503 035c 636F6D70 		.ascii	"compare\000"
ARM GAS  C:\Users\kani\AppData\Local\Temp\cc7SnVq4.s 			page 46


 1503      61726500 
 1504              	.LASF25:
 1505 0364 64656164 		.ascii	"deadtime\000"
 1505      74696D65 
 1505      00
 1506              	.LASF39:
 1507 036d 50574D5F 		.ascii	"PWM_1_Start\000"
 1507      315F5374 
 1507      61727400 
 1508              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
